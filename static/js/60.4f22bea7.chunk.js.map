{"version":3,"sources":["Pages/Error/TimeError.tsx"],"names":["withRouter","props","sysTime","setSysTime","useState","Date","now","serTime","setSerTime","useEffect","id","setInterval","clearInterval","update","parseInt","localStorage","getItem","className","map","Math","abs","status","title","subTitle","unix2Time","TimeDiff","min","max","extra","type","onClick","history","replace","UrlPrefix","cApi","getCopyright","then"],"mappings":"iGAAA,6EA8FeA,uBAvFIC,IAEf,MAAOC,EAASC,GAAcC,mBAAiBC,KAAKC,QAC7CC,EAASC,GAAcJ,mBAAiBC,KAAKC,OAOpDG,qBAAU,KACN,IAAIC,EAAKC,aAAY,KALrBR,EAAWD,EAAU,UACrBM,EAAWD,EAAU,OAIa,KAClC,MAAO,IAAMK,cAAcF,MAG/B,MAAMG,EAAS,KAAK,IAAD,EACfL,EAAWM,SAAQ,UAACC,aAAaC,QAAQ,sBAAtB,QAAwC,MAC3Db,EAAWE,KAAKC,QAOpB,OAJAG,qBAAU,KACNI,MACD,IAGC,qBAAKI,UAAW,cAAhB,SAEQ,CAAC,IAAIC,KAAI,IACDC,KAAKC,IAAIlB,EAAUK,GAAW,IAE1B,cAAC,IAAD,CACIc,OAAO,UACPC,MAAM,uIACNC,SACI,qCACI,kEAAYC,YAAUtB,MAD1B,IAC2C,uBACvC,wEAAasB,YAAUjB,MAF3B,IAE4C,uBACxC,kEAAYkB,YAASN,KAAKO,IAAIxB,EAASK,GAAUY,KAAKQ,IAAIzB,EAASK,UAG3EqB,MACI,cAAC,IAAD,CACIC,KAAK,UAELC,QAAS,KACL7B,EAAM8B,QAAQC,QAAQC,IAAY,UAJ1C,qCAEQ,YAYhB,cAAC,IAAD,CACIZ,OAAO,UACPC,MAAM,8LACNC,SACI,qCACI,kEAAYC,YAAUtB,MAD1B,IAC2C,uBACvC,wEAAasB,YAAUjB,MAF3B,IAE4C,uBACxC,kEAAYkB,YAASN,KAAKO,IAAIxB,EAASK,GAAUY,KAAKQ,IAAIzB,EAASK,UAG3EqB,MACI,cAAC,IAAD,CACIC,KAAK,UAELC,QAAS,KACLI,IAAKC,eAAeC,MAAK,KACrBvB,QALZ,qCAEQ","file":"static/js/60.4f22bea7.chunk.js","sourcesContent":["import {Button, Result} from \"antd\";\nimport {TimeDiff, unix2Time} from \"../../Utils/Time\";\nimport {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {UrlPrefix} from \"../../Config/constValue\";\nimport cApi from \"Utils/API/c-api\";\n\nconst TimeError = (props: any) => {\n\n    const [sysTime, setSysTime] = useState<number>(Date.now())\n    const [serTime, setSerTime] = useState<number>(Date.now())\n\n    const add = () => {\n        setSysTime(sysTime + 1000)\n        setSerTime(serTime + 1000)\n    }\n\n    useEffect(() => {\n        let id = setInterval(() => add(), 1000)\n        return () => clearInterval(id)\n    })\n\n    const update = ()=>{\n        setSerTime(parseInt(localStorage.getItem(\"server-time\") ?? \"0\"))\n        setSysTime(Date.now())\n    }\n\n    useEffect(() => {\n        update()\n    }, [])\n\n    return (\n        <div className={\"page-center\"}>\n            {\n                [''].map(() => {\n                    if (Math.abs(sysTime - serTime) < 60000) {\n                        return (\n                            <Result\n                                status=\"success\"\n                                title=\"您的系统时间与服务器时间误差在容许范围之内。\"\n                                subTitle={\n                                    <>\n                                        <span>系统时间：{unix2Time(sysTime)}</span> <br/>\n                                        <span>服务器时间：{unix2Time(serTime)}</span> <br/>\n                                        <span>时间相差：{TimeDiff(Math.min(sysTime, serTime), Math.max(sysTime, serTime))}</span>\n                                    </>\n                                }\n                                extra={\n                                    <Button\n                                        type=\"primary\"\n                                        key=\"return\"\n                                        onClick={() => {\n                                            props.history.replace(UrlPrefix + \"/home\")\n                                        }}\n                                    >\n                                        返回主页\n                                    </Button>\n                                }\n                            />\n                        )\n                    } else {\n                        return (\n                            <Result\n                                status=\"warning\"\n                                title=\"您的系统时间有误，这会影响 SDUOJ 系统的工作，请您更正当前系统时间。\"\n                                subTitle={\n                                    <>\n                                        <span>系统时间：{unix2Time(sysTime)}</span> <br/>\n                                        <span>服务器时间：{unix2Time(serTime)}</span> <br/>\n                                        <span>时间相差：{TimeDiff(Math.min(sysTime, serTime), Math.max(sysTime, serTime))}</span>\n                                    </>\n                                }\n                                extra={\n                                    <Button\n                                        type=\"primary\"\n                                        key=\"retry\"\n                                        onClick={() => {\n                                            cApi.getCopyright().then(()=>{\n                                                update()\n                                            })\n                                        }}\n                                    >\n                                        点击重试\n                                    </Button>\n                                }\n                            />\n                        )\n                    }\n                })\n            }\n        </div>\n    )\n}\n\nexport default withRouter(TimeError)\n"],"sourceRoot":""}