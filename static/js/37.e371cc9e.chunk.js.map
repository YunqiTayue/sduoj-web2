{"version":3,"sources":["Component/common/Table/TableWithPagination.tsx","Utils/MarkdownPreview.ts","Utils/MarkdownText.tsx","Component/submission/SubmissionList/SubmissionList.tsx","Component/common/Table/TableWithAllData.tsx","Component/common/Table/TableWithSelection.tsx","Component/submission/SubmissionList/ModalSubmissionList.tsx","../node_modules/antd/es/badge/utils.js","../node_modules/antd/es/badge/Ribbon.js","../node_modules/antd/es/badge/SingleNumber.js","../node_modules/antd/es/badge/ScrollNumber.js","../node_modules/antd/es/badge/index.js","Component/common/ExportExcel.tsx","Utils/dealFloat.ts","Component/problem/Objective/Objective.tsx","Component/problemSet/SubjectivePreview.tsx","../node_modules/@ant-design/icons-svg/es/asn/QuestionOutlined.js","../node_modules/@ant-design/icons/es/icons/QuestionOutlined.js","Component/problemSet/exportRank.ts","Component/problemSet/Rank.tsx"],"names":["connect","state","UState","UserReducer","TState","TableReduce","roles","userInfo","tableData","dispatch","setTableInfo","name","data","type","setDataSource","add","withTranslation","withRouter","props","total","setTotal","useState","setTableDataX","loading","setLoading","PageNow","setPageNow","PageSize","setPageSize","ck","defaultPageSize","searchText","setSearchText","tableVersion","setTableVersion","setTableData","undefined","getInfo","pageNow","pageSize","searchKey","moreProps","propsTableInfo","tableInfo","form","setFieldsValue","pn","ps","sk","fmp","getFieldsValue","API","then","rows","APIRowsTransForm","totalNum","totalPage","useEffect","initRequestProps","useForm","onFinish","values","JSON","stringify","onReset","resetFields","tf","valuesAfter","propsTableVersion","dataSource","useList","title","bordered","size","className","cardProps","extra","search","getForm","placeholder","t","onSearch","text","enterButton","style","width","useFormBtn","marginLeft","onClick","htmlType","grid","itemLayout","renderItem","pagination","onChange","page","current","hideOnSinglePage","showQuickJumper","showLessItems","showSizeChanger","pageSizeOptions","rowKey","columns","rowSelection","host","MarkdownText","running","setRunning","nowText","setNowText","isValueEmpty","code","id","trim","replaceAll","config","mode","cdn","emojiPath","theme","path","hljs","lineNumber","markdown","toc","mark","footnotes","autoSpace","math","inlineDigit","engine","VditorPreview","preview","document","getElementById","MarkdownPreview","res","overflowY","isLogin","addTableVersion","setSelectedRowKeys","setTopSubmission","submissionID","submissionInfo","setSubmissionModalVis","webSocketOpen","setWebSocketOpen","webSocketQueryList","setWebSocketQueryList","refreshDisable","setRefreshDisable","selectedRowKeys","showSubmission","record","submissionId","problemTitle","TimeLimit","timeLimit","MemoryLimit","memoryLimit","scoreMod","sumScore","testcaseMod","QuerySubmissionAPI","dataIndex","key","render","cursor","caseType","StateList","indexOf","SubmissionMap","append","RunningStep","checkpointNum","publicCheckpointNum","Math","floor","moment","format","fromNow","columnsAll","problemCodeRender","open","dataHandle","submissionIdHex","checkpointType","checkpointIndex","judgeResult","judgeScore","usedTime","usedMemory","dt","Index","findIndex","value","result","toString","score","runningNumber","x","parseInt","nowID","queryList","lessInfo","minWidth","judgeAuth","cApi","rejudge","afterSuccess","icon","message","success","setTimeout","disabled","actions","btnProps","block","btnText","disableSelection","Item","label","onPressEnter","e","allowClear","RunningResultList","map","Option","v","length","match","charCodeAt","push","submitTime","gmtCreate","React","memo","DragHandle","SortableHandle","color","SortableItem","SortableElement","XSortableContainer","SortableContainer","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","afterDrag","sortColumns","useDrag","concat","components","body","wrapper","useDragHandle","disableAutoscroll","helperClass","row","restProps","index","nextProps","updateTrick","TableWithSelection","Component","this","componentDidMount","selections","onSelect","changeableRowKeys","newSelectedRowKeys","filter","includes","uesAlldata","ModalVis","setModalVis","visible","footer","onCancel","isPresetColor","PresetColorTypes","Ribbon","_ref","_classNames","customizePrefixCls","prefixCls","children","_ref$placement","placement","_React$useContext","ConfigContext","getPrefixCls","direction","colorInPreset","ribbonCls","classNames","_defineProperty","colorStyle","cornerColorStyle","background","_extends","UnitNumber","_ref$offset","offset","position","top","left","getOffset","start","end","unit","SingleNumber","unitNodes","offsetStyle","originCount","count","originValue","Number","abs","_React$useState","_React$useState2","_slicedToArray","prevValue","setPrevValue","_React$useState3","_React$useState4","prevCount","setPrevCount","onTransitionEnd","timeout","clearTimeout","isNaN","transition","unitNumberList","prevIndex","n","singleUnit","transform","__rest","s","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","ScrollNumber","_a","motionClassName","show","_a$component","component","newProps","numberNodes","numberList","String","split","num","borderColor","boxShadow","cloneElement","oriProps","Badge","_classNames2","customizeScrollNumberPrefixCls","scrollNumberPrefixCls","status","_a$count","_a$overflowCount","overflowCount","_a$dot","dot","_a$size","_a$showZero","showZero","numberedDisplayCount","hasStatus","isZero","showAsDot","mergedCount","isHidden","useMemo","countRef","useRef","livingCount","displayCountRef","displayCount","isDotRef","mergedStyle","marginTop","right","titleNode","statusTextNode","displayNode","_typeof","statusCls","statusStyle","badgeClassName","statusTextColor","CSSMotion","motionName","motionAppear","motionDeadline","_classNames3","isDot","scrollNumberCls","scrollNumberStyle","ExportExcel","handleExportAll","colMap","nowData","fileName","json","item","keys","reduce","newData","sheet","XLSX","utils","json_to_sheet","openDownloadDialog","sheet2blob","handleExportAllJson","url","saveName","Blob","URL","createObjectURL","event","aLink","createElement","href","download","window","MouseEvent","createEvent","initMouseEvent","dispatchEvent","sheetName","workbook","SheetNames","Sheets","wbout","write","bookType","bookSST","buf","ArrayBuffer","view","Uint8Array","s2ab","ButtonType","ButtonProps","getJson","catch","error","ButtonText","dealFloat","toFixed","ObjectiveOption","SID","fromCharCode","OptionsState","answer_m","onContextMenu","onMark","onAnswerM","answer","span","key_o","content","answerSheet","setAnswerSheet","updateAnswerSheet","getAS","problemInfo","description","choice","SubjectivePreview","mxLength","setMxLength","setShow","level","substr","QuestionOutlined","ref","AntdIcon","_objectSpread","QuestionOutlinedSvg","displayName","exportRank","async","hied","duration","getProblemSummary","psid","rankInfo","username","obj","rank","nickname","sum_score","ips","finish_time","unix2Time","y","Promise","resolve","ContestReducer","setMinWidth","problemSetId","params","setRankInfo","lastUpdate","setLastUpdate","problemSetInfo","setProblemSetInfo","ModalInfo","setModalInfo","info","finally","problemColumns","tableWidth","groupInfo","getTp","col","fontWeight","h","cop","j","CheckOutlined","tp","getProblemSetProPreview","gid","pid","router","router_submission","proName","stateColum","paddingLeft","paddingRight","float","finish","textAlign","ip","destroyOnClose","Objective","SubmissionList","getProblemSetSubmissionList","getProblemSetSubmissionInfo","marginBottom","Date","now","rowClassName","fontSize"],"mappings":"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","file":"static/js/37.e371cc9e.chunk.js","sourcesContent":["import {Button, Card, Form, List, Space, Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {defaultPageSize} from \"../../../Config/constValue\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport Search from \"antd/es/input/Search\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {useForm} from \"antd/es/form/Form\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n    search?: boolean          // 是否开启搜索功能\n    defaultPageSize?: number  // 表格默认的页大小\n\n    // 面向 可选择的行 开放的接口\n    // setDataSource?: any       // 输出当前表格的数据\n    rowKey?: any              // 作为 key 记录的值\n    rowSelection?: any        // 可选列的相关配置\n\n}\n\nconst TableWithPagination = (props: any) => {\n    const [total, setTotal] = useState<number>(0)                   // 项的总数\n    const [tableData, setTableDataX] = useState()                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [PageNow, setPageNow] = useState<number>(1)               // 当前的页码数\n    const [PageSize, setPageSize] = useState<number>(ck(props.defaultPageSize, defaultPageSize))         // 当前的页大小\n    const [searchText, setSearchText] = useState<string | undefined>()        // 搜索的文本\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n    // 这里的所有的参数都只能增量的修改，不能删除，删除需要手动更新 redux\n    const getInfo = (pageNow?: number, pageSize?: number, searchKey?: string, moreProps?: any) => {\n        const propsTableInfo = props.tableData[props.name]?.tableInfo\n        if (propsTableInfo !== undefined) {\n            if (moreProps === undefined && propsTableInfo.moreProps !== undefined){\n                form.setFieldsValue(propsTableInfo.moreProps)\n            }\n            pageNow = pageNow ?? propsTableInfo.pageNow\n            pageSize = pageSize ?? propsTableInfo.pageSize\n            searchKey = searchKey ?? propsTableInfo.searchKey\n            moreProps = moreProps ?? propsTableInfo.moreProps\n        }\n        let pn = pageNow ?? PageNow\n        let ps = pageSize ?? PageSize\n        let sk = searchKey ?? searchText\n        let fmp = moreProps ?? form.getFieldsValue()\n        setPageNow(pn)\n        setPageSize(ps)\n        setSearchText(sk)\n        setLoading(true)\n        props.API({\n            pageNow: pn,\n            pageSize: ps,\n            searchKey: sk,\n            ...fmp\n        }).then((data: any) => {\n            // console.log(\"data\", data)\n            if (data.rows === null) data.rows = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data.rows))\n            } else setTableData(data.rows)\n            if (data.totalNum !== undefined && data.totalNum !== \"0\") {\n                setTotal(data.totalNum)\n                props.name && props.setTableInfo(props.name, {\n                    total: data.totalNum,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            } else {\n                setTotal(ps * data.totalPage);\n                props.name && props.setTableInfo(props.name, {\n                    total: ps * data.totalPage,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            }\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        form.setFieldsValue(props.initRequestProps)\n        getInfo()\n    }, [props.name])\n\n    // 带有表单的筛选\n    const [form] = useForm()\n    const onFinish = () => {\n        const values = form.getFieldsValue()\n        if (JSON.stringify(values) !== \"{}\")\n            getInfo(1, PageSize, undefined, values)\n    };\n    const onReset = () => {\n        const values = form.getFieldsValue()\n        form.resetFields();\n        const tf = props.tableData[props.name]?.tableInfo\n        props.name && props.setTableInfo(props.name, {\n            total: tf.total,\n            pageNow: tf.pageNow,\n            pageSize: tf.pageSize,\n            searchKey: tf.searchKey,\n            moreProps: undefined\n        })\n        const valuesAfter = form.getFieldsValue()\n        // 重置前后若发生改变，则重新加载表格\n        if (JSON.stringify(values) !== JSON.stringify(valuesAfter))\n            getInfo(1, PageSize, undefined, undefined)\n\n    };\n\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                const values = form.getFieldsValue()\n                getInfo(PageNow, PageSize, searchText, values)\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    return (\n        <>\n            {props.useList && (\n                <Card\n                    title={props.title}\n                    bordered={true}\n                    size={\"default\"}\n                    className={props.cardProps ?? \"zeroBodyPaddingLeft\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={props.t(\"searchUser\")}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            const values = form.getFieldsValue()\n                                            getInfo(1, PageSize, text, values)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        {props.useFormBtn && (\n                                            <Space style={{marginLeft: \"30px\"}} size={20}>\n                                                <Button type=\"primary\" onClick={onFinish}>\n                                                    筛选\n                                                </Button>\n                                                <Button htmlType=\"button\" onClick={onReset}>\n                                                    重置\n                                                </Button>\n                                            </Space>\n                                        )}\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <List\n                        grid={props.grid}\n                        itemLayout={\"vertical\"}\n                        loading={loading}\n                        size={props.size}\n                        dataSource={tableData}\n                        renderItem={props.renderItem}\n                        pagination={{\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            size: \"small\",\n                            hideOnSinglePage: true,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n            {!props.useList && (\n                <Card\n                    bordered={false}\n                    size={\"small\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={\"搜索\"}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            getInfo(1, PageSize, text)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        <Space style={{marginLeft: \"30px\"}} size={20}>\n                                            <Button type=\"primary\" onClick={onFinish}>\n                                                {props.t(\"filtering\")}\n                                            </Button>\n                                            <Button htmlType=\"button\" onClick={onReset}>\n                                                {props.t(\"Reset\")}\n                                            </Button>\n                                        </Space>\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <Table\n                        rowKey={props.rowKey}\n                        loading={loading}\n                        size={props.size}\n                        columns={props.columns}\n                        rowSelection={props.rowSelection}\n                        dataSource={tableData}\n                        pagination={props.pagination ?? {\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            hideOnSinglePage: false,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n        </>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const TState: TableState = state.TableReduce\n    return {\n        roles: UState.userInfo?.roles,\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithPagination)\n))\n\n","// @ts-ignore\nimport VditorPreview from 'vditor/dist/method.min'\nimport {isValueEmpty} from \"./empty\";\n\nconst runHost = \"https://oj.qd.sdu.edu.cn\"\nconst devHost = \"https://oj.cs.sdu.edu.cn:3000\"\nconst host = process.env.NODE_ENV === 'development' ? devHost : runHost;\n\nexport function MarkdownPreview(code: string | null | undefined, id: string) {\n    if (isValueEmpty(code) || isValueEmpty(code?.trim())) code = \"\"\n    code = code?.replaceAll(/`{3}\\n([-|0-9a-zA-Z])/g, \"```plaintext\\n$1\")\n    // 针对原本 $ 换行的公式，加以修正\n    code = code?.replaceAll(/\\$\\n(.*)\\n\\$/g, \"$ $1 $\")\n    const config = {\n        mode: \"light\",\n        cdn: host + \"/vditor\",\n        emojiPath: host + \"/vditor/dist/images/emoji\",\n        theme: {\n            path: host + \"/vditor/dist/css/content-theme\"\n        },\n        hljs: {\n            lineNumber: false\n        },\n        markdown: {\n            toc: true,\n            mark: true,\n            footnotes: true,\n            autoSpace: true,\n        },\n        math: {\n            inlineDigit: true,\n            engine: 'KaTeX'\n        }\n    }\n    // return VditorPreview.md2html(code, config)\n    return VditorPreview.preview(document.getElementById(id), code, config)\n}\n","import {MarkdownPreview} from \"./MarkdownPreview\";\nimport {useEffect, useState} from \"react\";\nimport {isValueEmpty} from \"./empty\";\n\nconst MarkdownText = (props: any) => {\n\n    const [running, setRunning] = useState<boolean>(false);\n    const [nowText, setNowText] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!isValueEmpty(props.text) && !running && nowText !== props.text) {\n            setRunning(true)\n            setNowText(props.text)\n            MarkdownPreview(props.text, props.id).then((res: any) => {\n                setRunning(false)\n            })\n        }\n    }, [props.id, props.text, running])\n\n    return (\n        <div id={props.id} style={{overflowY: \"hidden\"}}>\n        </div>\n    )\n}\n\nexport default MarkdownText\n","import {withTranslation} from \"react-i18next\";\nimport {Button, Card, Form, Input, message, Select, Space, Tooltip} from \"antd\";\nimport {SyncJudging} from \"../SyncJudging\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {RunningResultList, StateList, SubmissionMap, TopSubmissionInfoType} from \"../../../Type/ISubmission\";\nimport TestCase from \"../TestCase\";\nimport React, {Dispatch, useState} from \"react\";\nimport moment from \"moment\";\nimport TableWithSelection from \"../../common/Table/TableWithSelection\";\nimport ReJudge from \"../Func/ReJudge\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck, isValueEmpty} from \"../../../Utils/empty\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\nimport ModalSubmissionList from \"./ModalSubmissionList\";\n\nconst SubmissionList = (props: any) => {\n\n    // 为了动态显示评测点信息，使用 ws 与后端进行链接\n    // ws 是否打开\n    const [webSocketOpen, setWebSocketOpen] = useState<boolean>(false)\n    // ws 发送的信息（在打开时，当前数据的变更将同步发送至 ws）\n    const [webSocketQueryList, setWebSocketQueryList] = useState<string[]>([])\n    const [refreshDisable, setRefreshDisable] = useState<boolean>(false)\n\n    const selectedRowKeys = ck(props.tableData[props.name]?.selectedRowKeys, [])\n    const dataSource = ck(props.tableData[props.name]?.dataSource, [])\n\n    const addCaseInfo = (data: any[]) => {\n\n        const submissionIdHex = data[0]\n        const submissionVersion = data[1]\n        const checkpointType = data[2]\n        const checkpointIndex = data[3]\n        const checkpointId = data[4]\n        const judgeResult = data[5]\n        const judgeScore = data[6]\n        const usedTime = data[7]\n        const usedMemory = data[8]\n\n        let dt = dataSource\n        const Index = dt.findIndex((value: any) => value.submissionId === submissionIdHex)\n        if (Index === -1) return\n        if (checkpointIndex < 0) {\n            dt[Index].result = checkpointIndex.toString()\n            if (checkpointIndex === -1) {\n                dt[Index].result = judgeResult\n                dt[Index].score = judgeScore\n                dt[Index].usedTime = usedTime\n                dt[Index].usedMemory = usedMemory\n            }\n            // 检查还有没有未更新完的\n            let runningNumber = 0\n            for (const x of dt) if (parseInt(x.result) <= 0) runningNumber += 1\n            if (runningNumber === 0) setWebSocketOpen(false)\n        } else {\n            let nowID = 0\n            if (checkpointType === 0) {\n                nowID = checkpointIndex + 1\n            } else if (checkpointType === 1) {\n                nowID = dt[Index].checkpointNum + checkpointIndex + 1\n            }\n            if (dt[Index].RunningStep < nowID) {\n                dt[Index].RunningStep = nowID\n                dt[Index].score += judgeScore\n            }\n        }\n        props.setDataSource(dt, props.name)\n    }\n\n    const showSubmission = (record: any) => {\n        props.setTopSubmission(record.submissionId, {\n            title: record.problemTitle,\n            TimeLimit: record.timeLimit,\n            MemoryLimit: record.memoryLimit,\n            scoreMod: record.sumScore === undefined ? \"disable\" : \"show\",\n            sumScore: record.sumScore,\n            testcaseMod: \"show\",\n            QuerySubmissionAPI: props.QuerySubmissionAPI\n        })\n        props.setSubmissionModalVis(true)\n    }\n\n    const columns = [\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            render: (text: any, record: any) => {\n                return (\n                    <div style={{cursor: 'pointer'}} onClick={() => {\n                        showSubmission(record)\n                    }}>\n                        <TestCase\n                            type={\"text\"}\n                            caseType={StateList.indexOf(SubmissionMap[text])}\n                            append={\n                                text === \"-2\" ?\n                                    \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\"\n                                    : \"\"\n                            }\n                        />\n                    </div>\n\n                )\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return (\n                    <Tooltip title={moment(text).format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment(text).fromNow()}</span>\n                    </Tooltip>\n                )\n            }\n        }\n    ]\n\n    const columnsAll = [\n        {\n            title: \"ID\",\n            dataIndex: \"submissionId\",\n            key: \"submissionId\",\n            render: (text: any, record: any) => {\n                return <Button type={\"link\"} size={\"small\"} onClick={() => {\n                    showSubmission(record)\n                }}>\n                    {text}\n                </Button>\n            }\n        },\n        {\n            title: props.t(\"username\"),\n            dataIndex: \"username\",\n            key: \"username\"\n        },\n        {\n            title: props.t(\"problemNo.\"),\n            dataIndex: \"problemCode\",\n            key: \"problemCode\",\n            render: props.problemCodeRender\n        },\n        {\n            title: props.t(\"problemName\"),\n            dataIndex: \"problemTitle\",\n            key: \"problemTitle\"\n        },\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            width: 170,\n            render: (text: any, record: any) => {\n                return (\n                    <div style={{cursor: 'pointer'}} onClick={() => {\n                        showSubmission(record)\n                    }}>\n                        <TestCase\n                            type={\"text\"}\n                            caseType={StateList.indexOf(SubmissionMap[text])}\n                            append={\n                                text === \"-2\" ?\n                                    \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\" :\n                                    \"\"\n                            }\n                        />\n                    </div>\n                )\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"template\"),\n            dataIndex: \"judgeTemplateTitle\",\n            key: \"judgeTemplateTitle\"\n        },\n        {\n            title: props.t(\"memoryUsage\"),\n            dataIndex: \"usedMemory\",\n            key: \"usedMemory\",\n            render: (text: any) => {\n                return text + \" KB\"\n            }\n        },\n        {\n            title: props.t(\"timeUsage\"),\n            dataIndex: \"usedTime\",\n            key: \"usedTime\",\n            render: (text: any) => {\n                return text + \" ms\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return (\n                    <Tooltip title={moment(text).format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment(text).fromNow()}</span>\n                    </Tooltip>\n                )\n            }\n        }\n    ]\n\n    const getForm = (onFinish: any) => {\n        return (\n            <Space size={30}>\n                <Form.Item label={props.t(\"username\")} name={\"username\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"problemNo.\")} name={\"problemCode\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"JudgeResult\")} name={\"judgeResult\"}>\n                    <Select onChange={onFinish} allowClear style={{width: 200}}>\n                        {\n                            RunningResultList.map((value) => {\n                                return <Select.Option value={parseInt(value)}>\n                                    <TestCase type={\"text\"}\n                                              caseType={StateList.indexOf(SubmissionMap[value])}/>\n                                </Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n            </Space>\n        )\n    }\n\n    const API = (data: any) => {\n        if (\"problemCode\" in data && !isValueEmpty(data[\"problemCode\"])) {\n            let v: string = data[\"problemCode\"]\n            if (v.length === 1) {\n                if (v.match(/^[a-z]$/) !== null) v = (v.charCodeAt(0) - 'a'.charCodeAt(0) + 1).toString()\n                if (v.match(/^[A-Z]$/) !== null) v = (v.charCodeAt(0) - 'A'.charCodeAt(0) + 1).toString()\n            } else if (v.match(/^[0-9]{4}$/) !== null) {\n                v = \"SDUOJ-\" + v\n            }\n            data[\"problemCode\"] = v\n        }\n        return props.API(data)\n    }\n\n    return (\n        <>\n            <Card\n                title={\n                    <Space>\n                        {props.title !== undefined ? props.title : props.t(\"submissionRecord\")}\n                        <SyncJudging\n                            open={webSocketOpen}\n                            dataHandle={addCaseInfo}\n                            queryList={webSocketQueryList}/>\n                    </Space>\n                }\n                style={props.lessInfo ? {} : {minWidth: 1200}}\n                className={props.lessInfo ? \"smallBodyPadding\" : \"\"}\n                extra={\n                    <Space>\n                        {props.lessInfo !== true && judgeAuth(props.roles, [\"admin\", \"superadmin\"]) && (\n                            <ReJudge\n                                API={cApi.rejudge}\n                                data={selectedRowKeys}\n                                afterSuccess={() => {\n                                    props.addTableVersion(props.name)\n                                    props.setSelectedRowKeys([], props.name)\n                                }}\n                            />\n                        )}\n                        <Button\n                            icon={<ReloadOutlined/>}\n                            onClick={() => {\n                                setRefreshDisable(true)\n                                props.addTableVersion(props.name)\n                                message.success(props.t(\"refreshSuccessfully\"))\n                                setTimeout(() => {\n                                    setRefreshDisable(false)\n                                }, 3000)\n                            }}\n                            disabled={refreshDisable}\n                        >\n                            {props.t(\"refresh\")}\n                        </Button>\n                    </Space>\n                }\n                actions={(props.lessInfo && props.isLogin) ? [\n                    <div>\n                        {props.lessInfo && props.isLogin && (\n                            <ModalSubmissionList\n                                btnProps={{type: \"text\", block: true}}\n                                btnText={props.t(\"ShowAllInformation\")}\n                                name={\"Pro-SubmissionList-\" + props.name}\n                                API={props.API}\n                                QuerySubmissionAPI={props.QuerySubmissionAPI}\n                            />\n                        )}\n                    </div>\n                ] : undefined}\n            >\n                <TableWithSelection\n                    disableSelection={props.lessInfo || !judgeAuth(props.roles, [\"admin\", \"superadmin\"])}\n                    defaultPageSize={props.lessInfo ? 5 : undefined}\n                    showSizeChanger={props.lessInfo ? false : undefined}\n                    pagination={props.lessInfo ? false : undefined}\n                    columns={props.lessInfo ? columns : columnsAll}\n                    getForm={props.useForm === true ? getForm : undefined}\n                    name={props.name}\n                    size={\"small\"}\n                    rowKey={\"submissionId\"}\n                    API={API}\n                    APIRowsTransForm={(value: any) => {\n                        if (isValueEmpty(value)) value = []\n                        let webSocketQueryList = []\n                        let data: any = []\n                        for (const x of value) {\n                            if (x.judgeResult <= 0) webSocketQueryList.push(x.submissionId)\n                            data.push({\n                                ...x,\n                                score: x.judgeScore,\n                                RunningStep: 0,\n                                result: x.judgeResult.toString(),\n                                // sumScore: ck(x.sumScore, 100),\n                                sumScore: x.sumScore,\n                                submitTime: parseInt(x.gmtCreate),\n                            })\n                        }\n                        if (webSocketQueryList.length !== 0) {\n                            setWebSocketOpen(true)\n                            setWebSocketQueryList(webSocketQueryList)\n                        }\n                        return data\n                    }}\n                />\n            </Card>\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    const UState: UserState = state.UserReducer\n    return {\n        tableData: TState.tableData,\n        roles: UState.userInfo?.roles,\n        isLogin: UState.isLogin,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    addTableVersion: (name: string) => dispatch({\n        type: \"addTableVersion\",\n        name: name,\n    }),\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: true}),\n    setTopSubmission: (submissionID: string, submissionInfo: TopSubmissionInfoType) => dispatch({\n        type: \"setTopSubmission\",\n        submissionID: submissionID,\n        submissionInfo: submissionInfo\n    }),\n    setSubmissionModalVis: (data: boolean) => dispatch({type: \"setSubmissionModalVis\", data: data})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(SubmissionList)\n))\n","import {Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\nimport {MenuOutlined} from \"@ant-design/icons\";\nimport {arrayMoveImmutable} from \"array-move\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n\n    // 面向 可选择的行 开放的接口\n    rowKey?: any              // 作为 key 记录的值\n\n}\n\nconst TableWithAllData = (props: any) => {\n    const [tableData, setTableDataX] = useState([])                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n    // const [sortSwitch, setSortSwitch] = useState<boolean>(false);           // 操作是否开启排序模式\n\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n\n    const getInfo = () => {\n        setLoading(true)\n        props.API().then((data: any) => {\n            // console.log(\"data\", data)\n            if (data === null) data = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data))\n            } else setTableData(data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getInfo()\n    }, [props.name])\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                getInfo()\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    // === 拖拽排序 ===\n    // 可拖拽的排序手柄\n    const DragHandle = SortableHandle(() => <MenuOutlined style={{cursor: 'grab', color: '#999'}}/>);\n    const SortableItem = SortableElement((props: any) => <tr {...props} />);\n    const XSortableContainer = SortableContainer((props: any) => <tbody {...props} />);\n    // 排序结束后\n    const onSortEnd = ({oldIndex, newIndex}: any) => {\n        // 当前排序是有效的\n        if (oldIndex !== newIndex) {\n            // 移动数组中的元素，并设置到当前的状态\n            setTableData(arrayMoveImmutable(tableData, oldIndex, newIndex))\n            props.afterDrag && props.afterDrag(tableData, oldIndex, newIndex)\n        }\n    };\n    const DraggableContainer = (props: any) => {\n        return (\n            <XSortableContainer\n                useDragHandle\n                disableAutoscroll\n                helperClass=\"row-dragging\"\n                onSortEnd={onSortEnd}\n                {...props}\n            />\n        )\n    }\n    const DraggableBodyRow = ({className, style, ...restProps}: any) => {\n        // function findIndex base on Table rowKey props and should always be a right array index\n        const index = tableData.findIndex((x: any) => x[props.rowKey] === restProps['data-row-key']);\n        return <SortableItem index={index} {...restProps} />\n    };\n    const sortColumns: any[] = [\n        {\n            title: \"\",\n            dataIndex: 'sort',\n            width: 50,\n            className: \"drag-visable\",\n            render: () => <DragHandle/>,\n        }\n    ]\n\n    let columns = props.columns;\n    if (props.useDrag) columns = sortColumns.concat(columns)\n\n    return (\n        <Table\n            {...props}\n            rowSelection={props.rowSelection}\n            rowKey={props.rowKey}\n            loading={loading}\n            size={props.size}\n            columns={columns}\n            dataSource={tableData}\n            pagination={false}\n            components={{\n                body: {\n                    wrapper: DraggableContainer,\n                    row: DraggableBodyRow,\n                },\n            }}\n        />\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default React.memo(connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withTranslation()(\n        withRouter(TableWithAllData))), (props: any, nextProps: any) => {\n        return props.columns === nextProps.columns &&\n            (props.rowSelection?.selectedRowKeys.length === nextProps.rowSelection?.selectedRowKeys.length) &&\n            props.tableData === nextProps.tableData &&\n            props.updateTrick ===  nextProps.updateTrick\n    }\n)\n\n","import React, {Component, Dispatch} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport TableWithPagination from \"./TableWithPagination\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport TableWithAllData from \"./TableWithAllData\";\n\n\nclass TableWithSelection extends Component<any, any> {\n\n    componentDidMount() {\n\n    }\n\n    setSelectedRowKeys = (data: any) =>{\n        this.props.setSelectedRowKeys(data, this.props.name)\n    }\n\n    render() {\n        const selectedRowKeys = ck(this.props.tableData[this.props.name]?.selectedRowKeys, [])\n        let rowSelection: any = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys: React.Key[]) => {\n                this.setSelectedRowKeys(selectedRowKeys)\n            },\n            // 多选时的下拉选项\n            selections: [\n                {\n                    key: 'all',\n                    text: this.props.t(\"selectedAll\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'clear',\n                    text: this.props.t(\"clear\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        })\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'invert',\n                    text: this.props.t(\"invert\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys.filter((key:React.Key) => {\n                            return !selectedRowKeys.includes(key);\n                        });\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n            ]\n        };\n\n        return (\n            <>\n                {this.props.uesAlldata && (\n                    <TableWithAllData\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n                {this.props.uesAlldata !== true && (\n                    <TableWithPagination\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: TState.tableData\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithSelection)\n))\n\n","import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {Button, Modal} from \"antd\";\nimport SubmissionList from \"./SubmissionList\";\n\nconst ModalSubmissionList = (props: any) => {\n    const [ModalVis, setModalVis] = useState<boolean>(false);\n\n    return (\n        <>\n            <Button\n                {...props.btnProps}\n                onClick={() => {\n                    setModalVis(true)\n                }}\n            >\n                {props.btnText}\n            </Button>\n            <Modal\n                width={1250}\n                visible={ModalVis}\n                footer={false}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n            >\n                <SubmissionList\n                    {...props}\n                />\n            </Modal>\n        </>\n\n    )\n}\n\nexport default withTranslation()(withRouter(ModalSubmissionList))","import { PresetColorTypes } from '../_util/colors'; // eslint-disable-next-line import/prefer-default-export\n\nexport function isPresetColor(color) {\n  return PresetColorTypes.indexOf(color) !== -1;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { isPresetColor } from './utils';\n\nvar Ribbon = function Ribbon(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      customizePrefixCls = _ref.prefixCls,\n      style = _ref.style,\n      color = _ref.color,\n      children = _ref.children,\n      text = _ref.text,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'end' : _ref$placement;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  var colorInPreset = isPresetColor(color);\n  var ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-color-\").concat(color), colorInPreset), _classNames), className);\n  var colorStyle = {};\n  var cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-wrapper\")\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: ribbonCls,\n    style: _extends(_extends({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  })));\n};\n\nexport default Ribbon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nfunction UnitNumber(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      current = _ref.current,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset;\n  var style;\n\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: \"\".concat(offset, \"00%\"),\n      left: 0\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: style,\n    className: classNames(\"\".concat(prefixCls, \"-only-unit\"), {\n      current: current\n    })\n  }, value);\n}\n\nfunction getOffset(start, end, unit) {\n  var index = start;\n  var offset = 0;\n\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n\n  return offset;\n}\n\nexport default function SingleNumber(props) {\n  var prefixCls = props.prefixCls,\n      originCount = props.count,\n      originValue = props.value;\n  var value = Number(originValue);\n  var count = Math.abs(originCount);\n\n  var _React$useState = React.useState(value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevValue = _React$useState2[0],\n      setPrevValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(count),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevCount = _React$useState4[0],\n      setPrevCount = _React$useState4[1]; // ============================= Events =============================\n\n\n  var onTransitionEnd = function onTransitionEnd() {\n    setPrevValue(value);\n    setPrevCount(count);\n  }; // Fallback if transition event not support\n\n\n  React.useEffect(function () {\n    var timeout = setTimeout(function () {\n      onTransitionEnd();\n    }, 1000);\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [value]); // ============================= Render =============================\n  // Render unit list\n\n  var unitNodes;\n  var offsetStyle;\n\n  if (prevValue === value || Number.isNaN(value) || Number.isNaN(prevValue)) {\n    // Nothing to change\n    unitNodes = [/*#__PURE__*/React.createElement(UnitNumber, _extends({}, props, {\n      key: value,\n      current: true\n    }))];\n    offsetStyle = {\n      transition: 'none'\n    };\n  } else {\n    unitNodes = []; // Fill basic number units\n\n    var end = value + 10;\n    var unitNumberList = [];\n\n    for (var index = value; index <= end; index += 1) {\n      unitNumberList.push(index);\n    } // Fill with number unit nodes\n\n\n    var prevIndex = unitNumberList.findIndex(function (n) {\n      return n % 10 === prevValue;\n    });\n    unitNodes = unitNumberList.map(function (n, index) {\n      var singleUnit = n % 10;\n      return /*#__PURE__*/React.createElement(UnitNumber, _extends({}, props, {\n        key: n,\n        value: singleUnit,\n        offset: index - prevIndex,\n        current: index === prevIndex\n      }));\n    }); // Calculate container offset value\n\n    var unit = prevCount < count ? 1 : -1;\n    offsetStyle = {\n      transform: \"translateY(\".concat(-getOffset(prevValue, value, unit), \"00%)\")\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-only\"),\n    style: offsetStyle,\n    onTransitionEnd: onTransitionEnd\n  }, unitNodes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport SingleNumber from './SingleNumber';\n\nvar ScrollNumber = function ScrollNumber(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      count = _a.count,\n      className = _a.className,\n      motionClassName = _a.motionClassName,\n      style = _a.style,\n      title = _a.title,\n      show = _a.show,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'sup' : _a$component,\n      children = _a.children,\n      restProps = __rest(_a, [\"prefixCls\", \"count\", \"className\", \"motionClassName\", \"style\", \"title\", \"show\", \"component\", \"children\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('scroll-number', customizePrefixCls); // ============================ Render ============================\n\n  var newProps = _extends(_extends({}, restProps), {\n    'data-show': show,\n    style: style,\n    className: classNames(prefixCls, className, motionClassName),\n    title: title\n  }); // Only integer need motion\n\n\n  var numberNodes = count;\n\n  if (count && Number(count) % 1 === 0) {\n    var numberList = String(count).split('');\n    numberNodes = numberList.map(function (num, i) {\n      return /*#__PURE__*/React.createElement(SingleNumber, {\n        prefixCls: prefixCls,\n        count: Number(count),\n        value: num,\n        // eslint-disable-next-line react/no-array-index-key\n        key: numberList.length - i\n      });\n    });\n  } // allow specify the border\n  // mock border-color by box-shadow for compatible with old usage:\n  // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n\n\n  if (style && style.borderColor) {\n    newProps.style = _extends(_extends({}, style), {\n      boxShadow: \"0 0 0 1px \".concat(style.borderColor, \" inset\")\n    });\n  }\n\n  if (children) {\n    return cloneElement(children, function (oriProps) {\n      return {\n        className: classNames(\"\".concat(prefixCls, \"-custom-component\"), oriProps === null || oriProps === void 0 ? void 0 : oriProps.className, motionClassName)\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(component, newProps, numberNodes);\n};\n\nexport default ScrollNumber;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport Ribbon from './Ribbon';\nimport ScrollNumber from './ScrollNumber';\nimport { isPresetColor } from './utils';\n\nvar Badge = function Badge(_a) {\n  var _classNames, _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n      children = _a.children,\n      status = _a.status,\n      text = _a.text,\n      color = _a.color,\n      _a$count = _a.count,\n      count = _a$count === void 0 ? null : _a$count,\n      _a$overflowCount = _a.overflowCount,\n      overflowCount = _a$overflowCount === void 0 ? 99 : _a$overflowCount,\n      _a$dot = _a.dot,\n      dot = _a$dot === void 0 ? false : _a$dot,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? 'default' : _a$size,\n      title = _a.title,\n      offset = _a.offset,\n      style = _a.style,\n      className = _a.className,\n      _a$showZero = _a.showZero,\n      showZero = _a$showZero === void 0 ? false : _a$showZero,\n      restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\", \"count\", \"overflowCount\", \"dot\", \"size\", \"title\", \"offset\", \"style\", \"className\", \"showZero\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('badge', customizePrefixCls); // ================================ Misc ================================\n\n  var numberedDisplayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n  var hasStatus = status !== null && status !== undefined || color !== null && color !== undefined;\n  var isZero = numberedDisplayCount === '0' || numberedDisplayCount === 0;\n  var showAsDot = dot && !isZero;\n  var mergedCount = showAsDot ? '' : numberedDisplayCount;\n  var isHidden = useMemo(function () {\n    var isEmpty = mergedCount === null || mergedCount === undefined || mergedCount === '';\n    return (isEmpty || isZero && !showZero) && !showAsDot;\n  }, [mergedCount, isZero, showZero, showAsDot]); // Count should be cache in case hidden change it\n\n  var countRef = useRef(count);\n\n  if (!isHidden) {\n    countRef.current = count;\n  }\n\n  var livingCount = countRef.current; // We need cache count since remove motion should not change count display\n\n  var displayCountRef = useRef(mergedCount);\n\n  if (!isHidden) {\n    displayCountRef.current = mergedCount;\n  }\n\n  var displayCount = displayCountRef.current; // We will cache the dot status to avoid shaking on leaved motion\n\n  var isDotRef = useRef(showAsDot);\n\n  if (!isHidden) {\n    isDotRef.current = showAsDot;\n  } // =============================== Styles ===============================\n\n\n  var mergedStyle = useMemo(function () {\n    if (!offset) {\n      return _extends({}, style);\n    }\n\n    var offsetStyle = {\n      marginTop: offset[1]\n    };\n\n    if (direction === 'rtl') {\n      offsetStyle.left = parseInt(offset[0], 10);\n    } else {\n      offsetStyle.right = -parseInt(offset[0], 10);\n    }\n\n    return _extends(_extends({}, offsetStyle), style);\n  }, [direction, offset, style]); // =============================== Render ===============================\n  // >>> Title\n\n  var titleNode = title !== null && title !== void 0 ? title : typeof livingCount === 'string' || typeof livingCount === 'number' ? livingCount : undefined; // >>> Status Text\n\n  var statusTextNode = isHidden || !text ? null : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-status-text\")\n  }, text); // >>> Display Component\n\n  var displayNode = !livingCount || _typeof(livingCount) !== 'object' ? undefined : cloneElement(livingCount, function (oriProps) {\n    return {\n      style: _extends(_extends({}, mergedStyle), oriProps.style)\n    };\n  }); // Shared styles\n\n  var statusCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-dot\"), hasStatus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames));\n  var statusStyle = {};\n\n  if (color && !isPresetColor(color)) {\n    statusStyle.background = color;\n  }\n\n  var badgeClassName = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-status\"), hasStatus), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className); // <Badge status=\"success\" />\n\n  if (!children && hasStatus) {\n    var statusTextColor = mergedStyle.color;\n    return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n      className: badgeClassName,\n      style: mergedStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: statusCls,\n      style: statusStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: statusTextColor\n      },\n      className: \"\".concat(prefixCls, \"-status-text\")\n    }, text));\n  } // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: badgeClassName\n  }), children, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: !isHidden,\n    motionName: \"\".concat(prefixCls, \"-zoom\"),\n    motionAppear: false,\n    motionDeadline: 1000\n  }, function (_ref) {\n    var _classNames3;\n\n    var motionClassName = _ref.className;\n    var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n    var isDot = isDotRef.current;\n    var scrollNumberCls = classNames((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count-sm\"), size === 'small'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && displayCount && displayCount.toString().length > 1), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames3));\n\n    var scrollNumberStyle = _extends({}, mergedStyle);\n\n    if (color && !isPresetColor(color)) {\n      scrollNumberStyle = scrollNumberStyle || {};\n      scrollNumberStyle.background = color;\n    }\n\n    return /*#__PURE__*/React.createElement(ScrollNumber, {\n      prefixCls: scrollNumberPrefixCls,\n      show: !isHidden,\n      motionClassName: motionClassName,\n      className: scrollNumberCls,\n      count: displayCount,\n      title: titleNode,\n      style: scrollNumberStyle,\n      key: \"scrollNumber\"\n    }, displayNode);\n  }), statusTextNode);\n};\n\nBadge.Ribbon = Ribbon;\nexport default Badge;","import {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport XLSX from \"xlsx\";\nimport {ButtonType} from \"antd/lib/button/button\";\n\ninterface IButtonText {\n    ButtonText: any\n    ButtonType: ButtonType\n    ButtonProps?: any\n    fileName: string\n    colMap?: any\n    nowData?: any\n    getJson?: any\n}\n\nclass ExportExcel extends Component<IButtonText, any> {\n\n    handleExportAll = (colMap: any, nowData: any, fileName: string) => {\n        const json = nowData.map((item: any) => {\n            return Object.keys(item).reduce((newData: any, key) => {\n                newData[colMap[key] || key] = item[key]\n                return newData\n            }, {})\n        });\n        // console.log(\"json\", json)\n        const sheet = XLSX.utils.json_to_sheet(json);\n        this.openDownloadDialog(this.sheet2blob(sheet, undefined), fileName + `.xlsx`);\n    }\n\n    handleExportAllJson = (json: any, fileName: string) => {\n        const sheet = XLSX.utils.json_to_sheet(json);\n        this.openDownloadDialog(this.sheet2blob(sheet, undefined), fileName + `.xlsx`);\n    }\n\n    openDownloadDialog = (url: any, saveName: any) => {\n        if (typeof url === 'object' && url instanceof Blob) {\n            url = URL.createObjectURL(url); // 创建blob地址\n        }\n        var aLink = document.createElement('a');\n        aLink.href = url;\n        aLink.download = saveName || ''; // HTML5新增的属性，指定保存文件名，可以不要后缀，注意，file:///模式下不会生效\n        var event;\n        if (window.MouseEvent) event = new MouseEvent('click');\n        else {\n            event = document.createEvent('MouseEvents');\n            event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        }\n        aLink.dispatchEvent(event);\n    }\n\n    sheet2blob = (sheet: any, sheetName: any) => {\n        sheetName = sheetName || 'sheet1';\n        let workbook: any = {\n            SheetNames: [sheetName],\n            Sheets: {}\n        };\n        workbook.Sheets[sheetName] = sheet; // 生成excel的配置项\n\n        let wopts: any = {\n            bookType: 'xlsx', // 要生成的文件类型\n            bookSST: false, // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性\n            type: 'binary'\n        };\n        let wbout = XLSX.write(workbook, wopts);\n\n        // 字符串转ArrayBuffer\n        function s2ab(s: any) {\n            let buf = new ArrayBuffer(s.length);\n            let view = new Uint8Array(buf);\n            for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n            return buf;\n        }\n\n        return new Blob([s2ab(wbout)], {type: \"application/octet-stream\"});\n    }\n\n    render() {\n        return (\n            <Button\n                type={this.props.ButtonType}\n                {...this.props.ButtonProps}\n                onClick={() => {\n                    if (this.props.getJson !== undefined) {\n                        this.props.getJson().then((json: any) => {\n                            this.handleExportAllJson(json, this.props.fileName)\n                        }).catch((e: any) => {\n                            // console.log(e)\n                            message.error(e)\n                        })\n                    } else {\n                        const nowData = this.props.nowData()\n                        const colMap = this.props.colMap(nowData)\n                        this.handleExportAll(colMap, nowData, this.props.fileName)\n                    }\n                }}\n            >\n                {this.props.ButtonText}\n            </Button>\n        )\n    }\n}\n\nexport default ExportExcel","import {isValueEmpty} from \"./empty\";\n\nconst dealFloat = (v: number) => {\n    if(isValueEmpty(v)) return 0\n    if(v.toString().length > 6) return v.toFixed(2)\n    return v\n}\n\nexport default dealFloat;\n","import React, {useEffect, useState} from \"react\";\nimport {Col, Row} from \"antd\";\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport \"Assert/css/Options.scss\"\nimport {withRouter} from \"react-router-dom\";\nimport MarkdownText from \"../../../Utils/MarkdownText\";\n\ninterface propType {\n    key_o: string         // 题目索引名\n    problemInfo: any,       // 获取题目信息\n    getAS: any          // 获取用户答题信息\n    onMark: any         // 标记某个选项\n    onAnswerM: any      // 选择某个选项\n}\n\nconst Objective = (props: propType & any) => {\n\n    const [answerSheet, setAnswerSheet] = useState<any>(props.answerSheet)\n\n    useEffect(() => {\n        if (props.answerSheet !== undefined) {\n            setAnswerSheet(props.answerSheet)\n        } else {\n            updateAnswerSheet()\n        }\n    }, [props.key_o])\n\n    const updateAnswerSheet = () => {\n        props.getAS && props.getAS().then((res: any) => {\n            setAnswerSheet(res)\n        })\n    }\n\n    return (\n        <div className={\"Choice\"}>\n            <div className={\"Choice-title\"}>\n                <MarkdownText id={\"Choice-title-id\" + props.key_o} text={props.problemInfo?.description}/>\n            </div>\n            {props.problemInfo?.choice !== undefined && (\n                props.problemInfo.choice.map((v: any, index: number) => {\n                    return (\n                        <ObjectiveOption\n                            onMark={(SID: string) => {\n                                props.onMark && props.onMark(SID).then(() => {\n                                    updateAnswerSheet()\n                                })\n                            }}\n                            onAnswerM={(SID: string) => {\n                                props.onAnswerM && props.onAnswerM(SID).then(() => {\n                                    updateAnswerSheet()\n                                })\n                            }}\n                            mark={answerSheet?.mark ?? []}\n                            answer={answerSheet?.answer ?? []}\n                            answer_m={answerSheet?.answer_m ?? []}\n                            index={index}\n                            content={v}\n                            key_o={props.key_o + \"-\" + index.toString()}\n                        />\n                    )\n                })\n            )}\n        </div>\n    )\n}\n\n\ninterface ObjectiveOptionType {\n    key_o: string         // 关键字\n    content: string     // 文本内容\n    index: number       // 在所有选项中的编号\n    mark: string        // 标记的选项\n    onMark: any         // 在标记时调用\n    answer_m: string    // 我的答案\n    onAnswerM: any      // 在作答时调用\n    answer: string      // 正确答案\n}\n\nconst ObjectiveOption = (props: ObjectiveOptionType) => {\n\n    const SID = String.fromCharCode('A'.charCodeAt(0) + props.index)\n\n    let OptionsState = \"\"\n    if (props.answer_m.indexOf(SID) !== -1) OptionsState = \"used\"\n    else if (props.mark.indexOf(SID) !== -1) OptionsState = \"unused\"\n    else OptionsState = \"init\"\n\n\n    return (\n        <>\n            <div\n                onContextMenu={() => {\n                    props.onMark && props.onMark(SID)\n                }}\n                onClick={() => {\n                    props.onAnswerM && props.onAnswerM(SID)\n                }}\n                className={\"Options-\" + OptionsState + ` Options-${props.answer.indexOf(SID) !== -1 ? \"green\" : \"\"}`}\n            >\n                <Row>\n                    <Col span={1}>\n                        {[''].map(() => {\n                            if (OptionsState === \"used\") return <CheckOutlined/>\n                            if (OptionsState === \"unused\") return <CloseOutlined/>\n                            return undefined\n                        })}\n                    </Col>\n                    <Col className={\"Options-Choice\"} span={1}>\n                        {SID}.\n                    </Col>\n                    <Col className={\"Options-content\"} span={22}>\n                        <MarkdownText id={\"Options-content-id-\" + props.key_o} text={props.content}/>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default withRouter(Objective);\n","import {Button, Card} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport MarkdownText from \"../../Utils/MarkdownText\";\nimport React, {useEffect, useState} from \"react\";\n\nconst SubjectivePreview = (props: any) => {\n    const [mxLength, setMxLength] = useState<any>(240);\n    const [show, setShow] = useState<boolean>(false);\n\n    useEffect(() => {\n        setMxLength(240)\n    }, [props.description, props.answer])\n\n\n    return (\n        <>\n            <div>\n                <Card\n                    title={<Title level={5}> 原问题 </Title>}\n                    style={{marginTop: 24}}\n                    extra={<Button type={\"default\"} onClick={() => {\n                        if (mxLength === 998244353) {\n                            setMxLength(240)\n                        } else {\n                            setMxLength(998244353)\n                        }\n                    }}>{mxLength === 998244353 ? \"收齐全文\" : \"展开全文\"}</Button>}\n                >\n                    <MarkdownText\n                        id={\"proDescription\"}\n                        text={(props?.description ?? \"\").substr(0, mxLength)}\n                    />\n                </Card>\n            </div>\n            <Card\n                title={\n                    <Title level={5}> 学生答案 </Title>\n                }\n                style={{marginTop: 24}}\n                extra={<Button type={\"default\"} onClick={() => {\n                    setShow(!show)\n                }}>{show ? \"显示渲染\" : \"显示原文\"}</Button>}\n            >\n                {show && (\n                    <pre>\n                        {props?.answer?.[0]}\n                    </pre>\n                )}\n                {!show && (\n                    <MarkdownText\n                        id={\"userAnswer\"}\n                        text={props?.answer?.[0]}\n                    />\n                )}\n            </Card>\n        </>\n    )\n}\n\nexport default SubjectivePreview\n","// This icon file is generated automatically.\nvar QuestionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M764 280.9c-14-30.6-33.9-58.1-59.3-81.6C653.1 151.4 584.6 125 512 125s-141.1 26.4-192.7 74.2c-25.4 23.6-45.3 51-59.3 81.7-14.6 32-22 65.9-22 100.9v27c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-27c0-99.5 88.6-180.4 197.6-180.4s197.6 80.9 197.6 180.4c0 40.8-14.5 79.2-42 111.2-27.2 31.7-65.6 54.4-108.1 64-24.3 5.5-46.2 19.2-61.7 38.8a110.85 110.85 0 00-23.9 68.6v31.4c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-31.4c0-15.7 10.9-29.5 26-32.9 58.4-13.2 111.4-44.7 149.3-88.7 19.1-22.3 34-47.1 44.3-74 10.7-27.9 16.1-57.2 16.1-87 0-35-7.4-69-22-100.9zM512 787c-30.9 0-56 25.1-56 56s25.1 56 56 56 56-25.1 56-56-25.1-56-56-56z\" } }] }, \"name\": \"question\", \"theme\": \"outlined\" };\nexport default QuestionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionOutlined = function QuestionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionOutlinedSvg\n  }));\n};\n\nQuestionOutlined.displayName = 'QuestionOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionOutlined);","import {unix2Time} from \"../../Utils/Time\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport cApi from \"../../Utils/API/c-api\";\nimport {message} from \"antd\";\n\nconst exportRank = async (psid: any) => {\n    const hied = message.loading({\n        content: \"导出内容较多，请耐心等待\",\n        duration: 0,\n    })\n    return cApi.getProblemSummary({psid: psid, code: 1}).then((result: any) => {\n        const rankInfo = result.data\n        let res: any = []\n        for (const x of rankInfo) {\n            if (x.username === \"sducs\" || x.username === \"superadmin\") continue;\n            let obj: any = {\n                \"排名\": x.rank,\n                \"姓名\": x.nickname,\n                \"学号\": x.username,\n                \"总分\": x.sum_score,\n                \"ip数量\": x.ips?.length,\n                \"ip地址\": x.ips?.toString(),\n                \"交卷时间\": !isValueEmpty(x.finish_time) ? unix2Time(x.finish_time) : \"\"\n            }\n            for (const y in x) {\n                if (y.indexOf(\"-\") !== -1) {\n                    obj[y + \"-分数\"] = x[y].s\n                    if (!isValueEmpty(x[y].code))\n                        obj[y + \"-代码\"] = x[y].code.substr(0, 32766)\n\n                }\n            }\n            res.push(obj)\n        }\n        hied()\n        return Promise.resolve(res)\n    })\n\n}\n\nexport default exportRank;\n","import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport {Badge, message, Modal, Popover, Table, Tag} from \"antd\";\nimport {ContestState} from \"../../Redux/Action/contest\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"Assert/css/ContestRank.css\"\nimport cApi from \"Utils/API/c-api\"\nimport {CheckOutlined, QuestionOutlined} from \"@ant-design/icons\";\nimport dealFloat from \"../../Utils/dealFloat\";\nimport {unix2Time} from \"../../Utils/Time\";\nimport ExportExcel from \"../common/ExportExcel\";\nimport exportRank from \"./exportRank\";\nimport SubmissionList from \"../submission/SubmissionList/SubmissionList\";\nimport SubjectivePreview from \"./SubjectivePreview\";\nimport Objective from \"../problem/Objective/Objective\";\n\nconst Rank = (props: any) => {\n    const problemSetId = props.match.params.problemSetId\n    // const problemSetInfo = useProblemSetInfo(problemSetId)\n\n    const [rankInfo, setRankInfo] = useState<any>()\n    const [lastUpdate, setLastUpdate] = useState<any>()\n    const [problemSetInfo, setProblemSetInfo] = useState<any>()\n\n    const [ModalVis, setModalVis] = useState<boolean>(false);\n    const [ModalInfo, setModalInfo] = useState<any>({});\n\n    useEffect(() => {\n        if (rankInfo === undefined) {\n            const hied = message.loading({\n                content: \"榜单信息内容较多，请耐心等待\",\n                duration: 0,\n            })\n            cApi.getProblemSummary({psid: problemSetId, code: 0}).then((res: any) => {\n                setRankInfo(res.data)\n                setLastUpdate(res.lastUpdate)\n                setProblemSetInfo(res.info)\n            }).finally(() => {\n                hied()\n            })\n        }\n    }, [rankInfo, setRankInfo])\n\n    const problemColumns = []\n    let tableWidth = 330\n    const problemWidth = 70\n\n    if (problemSetInfo !== undefined) {\n        for (const x of problemSetInfo.groupInfo) {\n            const getTp = () => {\n                if (x.type === 0) return \"客观题\"\n                if (x.type === 1) return \"主观题\"\n                if (x.type === 2) return \"编程题\"\n            }\n            const col: any = {\n                title: <>\n                    <div>{`题组${x.index + 1} - ${x.name}`}</div>\n                    <div>{`${getTp()}`}</div>\n                </>,\n                children: []\n            }\n            for (const y of x.problemInfo) {\n                col.children.push({\n                    title: (\n                        <div className={\"ProHeader\"}>\n                            <div>\n                                <span style={{fontWeight: \"bold\"}}>\n                                    题目 {y.index + 1}\n                                </span>\n                            </div>\n                        </div>\n                    ),\n                    dataIndex: `${x.index + 1}-${y.index + 1}`,\n                    width: problemWidth,\n                    render: (text: any, row: any) => {\n                        if (text.h) {\n                            // 是否已经阅卷\n                            const cop = text.j ? <CheckOutlined style={{color: '#52c41a'}}/> :\n                                <QuestionOutlined style={{color: '#faad14'}}/>\n                            return (\n                                <div onClick={() => {\n                                    setModalVis(true)\n                                    let tp = problemSetInfo.groupInfo[x.index].type;\n                                    if (tp === 0 || tp === 1) {\n                                        const hied = message.loading({\n                                            content: \"加载中\",\n                                            duration: 0,\n                                        })\n                                        cApi.getProblemSetProPreview({\n                                            psid: problemSetId,\n                                            gid: x.index,\n                                            pid: y.index,\n                                            username: row.username\n                                        }).then((res: any) => {\n                                            if (tp === 0) {\n                                                setModalInfo({\n                                                    type: 0,\n                                                    problemInfo: res.problemInfo,\n                                                    answerSheet: {\n                                                        answer_m: res.answerSheet.answer,\n                                                        answer: res.problemInfo.answer,\n                                                        mark: res.answerSheet.mark\n                                                    },\n                                                    key_o: `${x.index + 1}-${y.index + 1}`\n                                                })\n                                            }\n                                            if (tp === 1) {\n                                                setModalInfo({\n                                                    type: 1,\n                                                    description: res.problemInfo.description,\n                                                    answer: res.answerSheet.answer\n                                                })\n                                            }\n                                        }).finally(() => {\n                                            hied()\n                                        })\n\n                                    } else if (tp === 2) {\n                                        setModalInfo({\n                                            type: 2,\n                                            username: row.username,\n                                            router: {psid: problemSetId, gid: x.index, pid: y.index},\n                                            router_submission: {psid: problemSetId, gid: -1, pid: -1},\n                                            proName: `题组${x.index + 1} - ${x.name}`\n                                        })\n                                    }\n                                }}>\n                                    <Badge count={cop} offset={[15, -3]}>\n                                        <span style={{fontWeight: \"bold\"}}>{dealFloat(text.s)}</span>\n                                    </Badge>\n                                </div>\n                            )\n                        }\n                    }\n                })\n                tableWidth += problemWidth\n            }\n            problemColumns.push(col)\n        }\n        if (props.minWidth !== tableWidth)\n            props.setMinWidth(tableWidth)\n    }\n\n    const stateColum: any = []\n\n    if (problemSetInfo?.type === 1) {\n        stateColum.push({\n            title: \"状态\",\n            width: 150,\n            render: (text: any, row: any) => {\n                return (\n                    <div style={{paddingLeft: 10, paddingRight: 10}}>\n                        <span style={{float: \"left\"}}>\n                            {row.finish === 1 && (\n                                <Popover content={<>{unix2Time(row.finish_time)}</>} title=\"交卷时间\">\n                                    <Tag color={\"red\"}>交卷</Tag>\n                                </Popover>\n                            )}\n                        </span>\n                        <span style={{float: \"right\", textAlign: \"right\"}}>\n                            {row.ips?.length <= 1 && (\n                                <Tag color={\"green\"}>Ip正常</Tag>\n                            )}\n                            {row.ips?.length > 1 && (\n                                <Popover\n                                    content={\n                                        <>{row.ips?.map((ip: string) => <div>{ip}</div>)}</>\n                                    }\n                                    title=\"使用Ip\">\n                                    <Tag color={\"orange\"}>Ip异常</Tag>\n                                </Popover>\n                            )}\n                        </span>\n                    </div>\n                )\n            }\n        })\n        tableWidth += 150\n    }\n\n    return (\n        <div style={{marginTop: 24}}>\n            <Modal\n                width={1250}\n                visible={ModalVis}\n                footer={false}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n            >\n                {ModalInfo.type === 0 && (\n                    <Objective\n                        problemInfo={ModalInfo?.problemInfo}\n                        answerSheet={ModalInfo?.answerSheet}\n                        key_o={ModalInfo?.key_o}\n                    />\n                )}\n                {ModalInfo.type === 1 && (\n                    <SubjectivePreview\n                        description={ModalInfo?.description}\n                        answer={ModalInfo?.answer}\n                    />\n                )}\n                {ModalInfo.type === 2 && (\n                    <SubmissionList\n                        btnText={\"记录-\" + ModalInfo.username + \"-\" + ModalInfo.proName}\n                        name={\"Contest-Rank-SubmissionList-\" + ModalInfo.username + \"-\" + ModalInfo.proName}\n                        API={async (data: any) => {\n                            return cApi.getProblemSetSubmissionList({\n                                ...data,\n                                router: ModalInfo.router,\n                                username: ModalInfo.username,\n                                problemSetId: ModalInfo.router.psid\n                            })\n                        }}\n                        QuerySubmissionAPI={async (submissionId: string) => {\n                            return cApi.getProblemSetSubmissionInfo({\n                                ...ModalInfo.router_submission,\n                                submissionId: submissionId\n                            })\n                        }}\n                    />\n                )}\n\n            </Modal>\n            <div style={{fontWeight: \"lighter\", marginBottom: 16, marginLeft: 4}}>\n                榜单更新有大约1分钟的延迟，上次更新时间：{lastUpdate ? unix2Time(lastUpdate) : undefined}\n                <div style={{float: \"right\"}}>\n                    <ExportExcel\n                        ButtonProps={{}}\n                        ButtonText={\"导出成绩\"}\n                        ButtonType={\"default\"}\n                        getJson={() => exportRank(problemSetId)}\n                        fileName={problemSetInfo?.name + \"_\" + Date.now() + \"_结果导出\"}\n                    />\n                </div>\n            </div>\n            <Table\n                className={\"RankTable\"}\n                style={{width: tableWidth, minWidth: tableWidth}}\n                pagination={false}\n                bordered={true}\n                dataSource={rankInfo}\n                rowClassName={() => {\n                    return \"rowBase\"\n                }}\n                columns={[\n                    {\n                        title: \"排名\",\n                        dataIndex: \"rank\",\n                        width: 80,\n                        render: (text) => {\n                            return <span className={\"center\"}> {text} </span>\n                        }\n                    },\n                    {\n                        title: \"参赛人\",\n                        width: 150,\n                        render: (text, row) => {\n                            return (\n                                <div style={{paddingLeft: 10, paddingRight: 10}}>\n                                    <span style={{float: \"right\", textAlign: \"right\"}}>\n                                        <div style={{fontWeight: \"bold\"}}>{row.username}</div>\n                                        <div style={{color: \"grey\", fontSize: 12}}>{row.nickname}</div>\n                                    </span>\n                                </div>\n                            )\n                        }\n                    },\n                    ...stateColum,\n                    {\n                        title: \"总分\",\n                        width: 100,\n                        render: (text, row) => {\n                            return (\n                                <>\n                                    <span>{dealFloat(row.sum_score)}</span>\n                                </>\n                            )\n                        }\n                    },\n                    ...problemColumns\n                ]}\n            >\n            </Table>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: ContestState = state.ContestReducer\n    return {\n        minWidth: State.minWidth,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setMinWidth: (data: number) => dispatch({\n        type: \"setMinWidth\", data: data\n    }),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(withRouter(Rank)))\n"],"sourceRoot":""}