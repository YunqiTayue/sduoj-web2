{"version":3,"sources":["Utils/API/c-api.ts","Assert/img/memory.svg","Assert/img/bomb.svg","Assert/img/output.svg","Component/submission/TestCase.tsx","Utils/deepClone.ts","Utils/API/apiAddress.ts","Utils/judgeAhtu.ts","Component/submission/Func/ReJudge.tsx","Utils/initLanguage.ts","Utils/API/m-api.ts","Utils/Time.ts","Component/user/Form/Item/ItemPassword.tsx","Config/i18n.tsx","Component/submission/SyncJudging.tsx","Utils/Loading.tsx","Config/router/router.tsx","Component/common/CodeHighlight.tsx","Type/ISubmission.ts","Component/common/SubmitButton.tsx","Utils/empty.ts","Utils/API/request.ts","Config/constValue.ts","Component/submission/Processing/Running.tsx","Component/submission/Processing/JudgeResult.tsx","Component/submission/Func/Invalidate.tsx","Component/submission/Func/DownloadTestCase.tsx","Component/submission/Processing/Summary.tsx","Component/submission/Processing/Processing.tsx","Component/submission/Processing/ModalProcessing.tsx","Component/common/RequirePassChange.tsx","App.tsx","Redux/Reducer/table.ts","Redux/Reducer/exam.ts","Redux/Reducer/config.ts","Redux/Reducer/problem.ts","Redux/Reducer/user.ts","Redux/Reducer/manage.ts","Redux/Reducer/submission.ts","Redux/Reducer/contest.ts","Redux/Reducer/problemSet.ts","Redux/Reducer/common.ts","Redux/Store/rootReducer.ts","Redux/Store/index.ts","reportWebVitals.ts","index.tsx"],"names":["cApi","request","get","data","post","headers","getFileDownloadUrl","id","name","apiAddress","CLIENT_SERVER","params","_defs","_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMemory","title","titleId","props","svgRef","t","className","viewBox","xmlns","xmlnsXlink","width","height","ref","type","d","ForwardRef","SvgBomb","_path2","_path3","_path4","_path5","SvgOutput","TestCase","Component","constructor","super","state","MouseIn","render","NameList","StateList","CaseList","Pending","icon","ClockCircleOutlined","text","textAll","color","undefined","Running","SyncOutlined","spin","Accepted","CheckCircleOutlined","tagColor","TimeLimitExceeded","FieldTimeOutlined","MemoryLimitExceeded","Icon","component","Memory","OutputLimitExceeded","OLE","WrongAnswer","CloseCircleOutlined","RuntimeError","RE","CompilationError","PresentationError","SystemError","Queueing","Compiling","Judging","End","Cancelled","caseType","visible","caseTime","caseMemory","caseScore","content","strong","Math","floor","scoreMod","TestCaseStates","map","onMouseEnter","setState","onMouseLeave","zIndex","caseIndex","level","ck","textLevel","append","withTranslation","deepClone","obj","_toString","toString","nodeType","cloneNode","Date","getTime","flags","global","push","multiline","ignoreCase","RegExp","join","result","Array","isArray","MANAGE_SERVER","FRONT_SERVER","SOCKET_SERVER","judgeAuth","roles","minRole","ok","v","includes","onClick","RejudgeNumber","submissionIds","message","error","API","then","res","success","afterSuccess","initLanguage","lang","localStorage","getItem","navigator","language","substr","toLowerCase","mApi","addUsers","async","deleteUsers","getProblemList","getProblem","updateProblemInfo","createProblem","getProblemDescriptionList","getProblemDescription","updateDescription","createDescription","deleteDescription","uploadSingleCheckpoint","uploadCheckpointFiles","getCheckpointList","problemCode","getCheckpointPreview","checkpointId","updateProblemCheckpoints","getContestList","getContest","updateContest","createContest","exportComprehensive","Promise","resolve","reject","responseType","ret","blob","Blob","elink","document","createElement","filename","download","href","URL","createObjectURL","click","revokeObjectURL","err","getOneTemplate","pageTemplateList","getJudgeTemplateList","createTemplate","updateTemplate","queryTemplateTitle","zipDownload","getZipFile","zipDownloadFast","createGroup","updateGroup","getGroupDetail","getGroupList","updateUserStatus","addUsersToGroup","deleteGroup","queryGroupTitle","getExamList","getExamInfo","examId","createExam","updateExam","judgeExam","getExamSubmission","getChoiceList","createChoiceProblem","updateChoiceProblem","getChoiceInfo","getChoiceProblem","createAnnouncement","updateAnnouncement","deleteAnnouncement","sg_id","getScreenrecord","deleteScreenrecord","TimeRangeState","start","end","parseInt","now","getDiffSecond","Start","moment","diff","TimeDiff","h","m","s","diffSecond","unix2Time","time","format","unix2Date","firstPassProps","label","newpass","oldpass","Item","rules","required","hasFeedback","Password","noConfirm","dependencies","getFieldValue","validator","_","value","code","languageMap","zhCN","enUS","defLang","id_","findIndex","item","locale","i18n","use","initReactI18next","init","resources","en","translation","require","zh","lng","debug","interpolation","escapeValue","SyncJudging","sendMessage","lastMessage","readyState","useWebSocket","share","open","useEffect","JSON","parse","x","dataHandle","ReadyState","OPEN","stringify","queryList","Loading","delay","size","routerCLayoutData","routerCLayout","num","path","UrlPrefix","exact","lazy","routerLayout","getRouterPath","router","copyable","tooltips","style","darcula","showLineNumbers","RunningResultList","SubmissionMap","langMap","SubmitButton","loading","setLoading","useState","btnProps","disabled","catch","e","console","log","finally","btnText","v1","v2","isValueEmpty","y","baseUrl","service","axios","create","baseURL","timeout","defaults","withCredentials","messageDisabledList","dealResponse","resp","url","response","setItem","timestamp","abs","window","location","replace","indexOf","pos","to","substring","split","config","Url","link","defaultPageSize","MaxCodeLength","PREDEFINED_CHECKERS","description","SPJ_Code","SPJ_Config","NEWLINE_CONVERT_INDEX","DEFAULT","DOS2UNIX","UNIX2DOS","NEWLINE_CONVERT","connect","UState","UserReducer","SubState","SubmissionReducer","userInfo","RejudgeAPI","TopSubmissionInfo","InvalidateAPI","dispatch","Step","Steps","RunningState","RunningResult","submissionInfo","TestCaseStateList","PublicTestCaseStateList","testcaseMod","getRunningIcon","w","LoadingOutlined","getRunningState","status","marginTop","judgeLog","showIcon","ReJudge","rejudge","submissionId","refresh","textAlign","paddingTop","Title","scoreAC","Tcl","add","getACScore","JudgedNum","percent","fontSize","display","justifyContent","flexWrap","JudgeResult","info","numList","ACNumber","firstRejectId","caseID","AC","SumAll","sumScore","CaseNumber","getInfo","fontWeight","extra","useDownload","danger","checkpoint","inputFileId","downloadFilename","inputFilename","outputFileId","outputFilename","span","defaultActiveKey","tabPosition","index","TabPane","tab","val","CloseOutlined","DownloadOutlined","firstUnACCaseNumber","scoreSum","mxTime","mxMem","SumTime","SumMem","caseMem","SumRunning","AvgMem","getCaseInfo","marginBottom","pagination","dataSource","judgeResult","gmtCreate","gmtModified","judgeTemplateTitle","showHeader","columns","dataIndex","offset","username","userId","problemTitle","direction","invalidateSubmission","TimeLimit","margin","suffix","MemoryLimit","TopSubmissionId","QuerySubmissionAPI","withRouter","currentStep","setCurrentStep","showStep","setShowStep","setRunningState","setRunningResult","setTestCaseStateList","setPublicTestCaseStateList","setSubmissionInfo","webSocketOpen","setWebSocketOpen","webSocketQueryList","setWebSocketQueryList","preDealCheckpointSet","resData","Score","Time","Index","initCaseData","setCaseValue","getSubmissionInfo","TestCaseInit","PublicTestCaseInit","checkpointNum","publicCheckpointNum","nameList","getStatus","NameIndex","getDisabled","getIcon","sf","steps","cssClass","CodeHighlight","zipFileId","running","summary","timeLimit","memoryLimit","submissionIdHex","checkpointType","checkpointIndex","judgeScore","usedTime","usedMemory","active","current","onChange","submissionModalVis","SubmissionModalVis","setSubmissionModalVis","useTranslation","destroyOnClose","onCancel","overflow","footer","form","Form","useForm","requirePasswordChange","useSelector","features","passChange","setPassChange","maskClosable","validateFields","CApi","updatePassword","resetFields","layout","ItemPassword","local","ConfigReducer","fallback","r","initState","tableData","examInfo","examProListInfo","examAnswerSheetInfo","langCode","mode","copyRight","ProblemInfo","isLogin","manageInitData","submissionListInfo","contestInfo","minWidth","afterContestSubmission","sliderTime","allowSliderMove","openSliderMove","exportData","problemSetInfo","keyValueData","rootReducers","combineReducers","TableReduce","action","State","initTableData","selectedRowKeys","tableVersion","tableInfo","nv","ExamReducer","ProblemReducer","ManageReducer","submissionID","ContestReducer","ProblemSetReducer","CommonReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9aa52183.chunk.js","sourcesContent":["import {\n    forgetInfo,\n    loginInfo,\n    problemListQuery,\n    profileInfo,\n    registerInfo,\n    thirdPartyLogin,\n    updatePassWord,\n    verificationEmail\n} from '../../Type/types'\nimport request from \"./request\";\nimport apiAddress from \"./apiAddress\";\n\n\nconst cApi = {\n    // Config\n    async getCopyright() {\n        return request.get<string>('/site/getCopyright');\n    },\n\n\n    // User\n    async login(data: loginInfo) {\n        return request.post('/user/login', data)\n    },\n    async emailLogin(data: { email: string, emailCode: string }) {\n        return request.post('/user/emailLogin', data)\n    },\n    async logout() {\n        return request.get('/user/logout')\n    },\n    async register(data: registerInfo) {\n        return request.post('/user/register', data)\n    },\n    async forgetPassword(data: forgetInfo) {\n        return request.post('/user/forgetPassword', data)\n    },\n    async getProfile() {\n        return request.get(\"/user/getProfile\")\n    },\n    async updateProfile(data: profileInfo) {\n        return request.post('/user/updateProfile', data)\n    },\n    async updatePassword(data: updatePassWord) {\n        return request.post('/user/updatePassword', data)\n    },\n    async updateEmail(data: any) {\n        return request.post(\"/user/updateEmail\", data)\n    },\n    async sendVerificationEmail(data: verificationEmail) {\n        return request.post('/user/sendVerificationEmail', data)\n    },\n    async resetPassword(data: any) {\n        return request.post('/user/resetPassword', data)\n    },\n    async getCaptcha() {\n        return request.get(\"/user/getCaptcha\")\n    },\n    async isExist(data: any) {\n        return request.get(\"/user/isExist\", data)\n    },\n    async queryParticipateContest() {\n        return request.get(\"/user/queryParticipateContest\")\n    },\n\n\n    // 第三方登录相关\n    async thirdPartyLogin(data: thirdPartyLogin) {\n        // await sleep(2000)\n        // return Promise.resolve({\n        //     thirdParty: \"SDUCAS\",\n        //     sduRealName: \"XXX\",\n        //     sduId: \"2018XXXXXXXX\",\n        //     user: null,\n        //     token: \"1111111\"\n        // })\n        return request.get('/user/thirdPartyLogin', data)\n    },\n    async thirdPartyUnbinding(data: { thirdParty: string }) {\n        return request.get(\"/user/thirdPartyUnbinding\", data)\n    },\n    //// 注册新账号并绑定已有账号\n    async thirdPartyRegister(data: any) {\n        return request.post(\"/user/thirdPartyRegister\", data)\n    },\n    //// 绑定已有账号\n    async thirdPartyBinding(data: any) {\n        return request.post(\"/user/thirdPartyBinding\", data)\n    },\n\n\n    // 文件相关\n    async uploadFile(data: any) {\n        return request.post('/filesys/uploadFiles', data, {\n            headers: {\"Content-Type\": \"multipart/form-data\"}\n        });\n    },\n    async uploadSingleFile(data: any) {\n        return request.post('/filesys/upload', data, {\n            headers: {\"Content-Type\": \"multipart/form-data\"}\n        });\n    },\n    async getFileByMD5(data: { md5: string }) {\n        return request.get(\"/filesys/queryByMd5\", data)\n    },\n    getFileDownloadUrl(id: string, name: string) {\n        return apiAddress().CLIENT_SERVER + \"/api/filesys/download/\" + id + \"/\" + name\n    },\n\n    // 比赛相关\n    async getContestList(data: any) {\n        return request.get(\"/contest/list\", data)\n    },\n    async invalidateContestSubmission(data: { submissionId: string, contestId: string }) {\n        return request.get(\"/contest/invalidateSubmission\", data)\n    },\n    async getUpcomingContest(data: any) {\n        return request.get(\"/contest/queryUpcomingContest\", data)\n    },\n    async getContestProblem(data: { contestId: string, problemCode: string }) {\n        return request.get(\"/contest/queryProblem\", data)\n    },\n    async getContestAcProblem(data: { contestId: string }) {\n        return request.get(\"/contest/queryACProblem\", data)\n    },\n    async participateContest(data: { contestId: string, password?: string }) {\n        return request.post(\"/contest/participate\", data)\n    },\n    async submitContestProblem(data: { contestId: string } & any) {\n        return request.post(\"/contest/createSubmission\", data)\n    },\n    async getContestInfo(data: { contestId: string }) {\n        return request.get(\"/contest/query\", data)\n    },\n    async getContestSubmissionList(data: any) {\n        return request.get(\"/contest/listSubmission\", data)\n    },\n    async rejudgeInContest(data: { contestId: string, submissionIds: string[] }) {\n        return request.post(\"/contest/rejudge\", data)\n    },\n    async getContestSubmissionInfo(data: { contestId: string, submissionId: string }) {\n        return request.get(\"/contest/querySubmission\", data)\n    },\n    async getRank(data: { contestId: string }) {\n        return request.get(\"/contest/rank\", data)\n    },\n    async submitInContest(data: { contestId: string } & any) {\n        return request.post(\"/contest/createSubmission\", data)\n    },\n    async getContestReport(data: any) {\n        return request.post(\"/contest/comprehensiveReport\", data)\n    },\n\n\n    // 比赛问答\n    async createQuestion(data: { contestId: string, title: string, message: string }) {\n        return request.post(\"/contest/createQuestion\", data)\n    },\n    async replyQuestion(data: { contestId: string, message: string, rootId: string, parentId: string }) {\n        return request.post(\"/contest/reply\", data)\n    },\n    async deleteQuestion(data: { clarificationId: string }) {\n        return request.get(\"/contest/delete\", data)\n    },\n    async getQuestionList(data: { contestId: string }) {\n        return request.get(\"/contest/listQuestion\", data)\n    },\n    async getQuestionDetail(data: { clarificationId: string }) {\n        return request.get(\"/contest/questionDetail\", data)\n    },\n    async publicQuestion(data: { clarificationId: string }) {\n        //// TODO 此处正确性未知\n        return request.post(\"/contest/publicQuestion\", data)\n    },\n\n\n    // 公告相关\n    async getAnnouncementList(data: any) {\n        data['filter'] = \"default\"\n        return request.get(\"/notice/list\", data)\n    },\n    async getAnnouncement(data: any) {\n        return request.get(\"notice/query\", data)\n    },\n\n\n    // 提交相关\n    async rejudge(data: string[]) {\n        return request.post(\"/submit/rejudge\", data)\n    },\n    async getSubmissionInfo(data: { submissionId: string }) {\n        return request.get(\"/submit/query\", data)\n    },\n    async getSubmissionList(data: any) {\n        return request.get(\"/submit/list\", data)\n    },\n    async getACProblem() {\n        return request.get(\"/submit/queryACProblem\")\n    },\n    async invalidateSubmission(data: { submissionId: string }) {\n        return request.get(\"/submit/invalidateSubmission\", data)\n    },\n    async submit(data: {\n        problemCode: string,\n        judgeTemplateId: string,\n        code?: string\n        zipFileId?: string\n    }) {\n        return request.post(\"/submit/create\", data)\n    },\n\n\n    // 题目相关\n    async getProblemList(data: problemListQuery) {\n        return request.get(\"/problem/list\", data)\n    },\n    async getProblemInfo(data: { problemCode: string, descriptionId?: string }) {\n        return request.get(\"/problem/query\", data)\n    },\n\n\n    // 用户组相关\n    async getGroupInfo(data: { groupId: string }) {\n        return request.get(\"/group/query\", data)\n    },\n    async getMyGroup() {\n        return request.get(\"/group/my\")\n    },\n    async getGroupList(data: any) {\n        return request.get(\"/group/page\", data)\n    },\n    async joinGroupApply(data: { groupId: string }) {\n        return request.get(\"/group/apply\", data)\n    },\n    async quitGroup(data: { groupId: string }) {\n        return request.get(\"/group/quit\", data)\n    },\n\n\n    // 题单相关\n    async getProblemSetInfo(data: any) {\n        return request.post(\"/ps/problem_set/info_c\", data)\n    },\n    // 获取单个题目信息\n    async getProblemSetProblem(data: any) {\n        return request.post(\"/ps/problem_set/pro_info\", data)\n    },\n\n    // 提交题目答案\n    async submitProblemSetProblem(data: any) {\n        return request.post(\"/ps/answer_sheet/answer\", data)\n    },\n    // 获取答题卡信息\n    async getProblemSetProblemAS(data: any) {\n        return request.post(\"/ps/answer_sheet/info\", data)\n    },\n    // 标记客观题选项\n    async markObjectiveProblem(data: any) {\n        return request.post(\"/ps/answer_sheet/mark\", data)\n    },\n    // 标记题目\n    async updateProblemSetProblemCollect(data: any) {\n        return request.post(\"/ps/answer_sheet/collect\", data)\n    },\n\n    // 编程题提交列表\n    async getProblemSetSubmissionList(data: any) {\n        return request.post(\"/ps/answer_sheet/submissionList\", data)\n    },\n    // 编程题提交详情\n    async getProblemSetSubmissionInfo(data: any) {\n        return request.post(\"/ps/answer_sheet/submissionInfo\", data)\n    },\n    // 题单交卷\n    async finishProblemSet(data: any) {\n        return request.post(\"/ps/answer_sheet/finish\", data)\n    },\n\n    // 获取评阅列表\n    async getJudgeList(data: any) {\n        return request.post(\"/ps/judge/list\", data)\n    },\n    // 获取评阅信息\n    async getJudgeInfo(data: any) {\n        return request.post(\"/ps/judge/info\", data)\n    },\n    // 更新评阅信息\n    async updateJudgeInfo(data: any) {\n        return request.post(\"/ps/judge/add\", data)\n    },\n    // 显示题单总结信息，用于显示 Rank\n    async getProblemSummary(data: any) {\n        return request.post(\"/ps/summary/summary\", data)\n    },\n    // 获取榜单的题目预览数据\n    async getProblemSetProPreview(data: any) {\n        return request.post(\"/ps/summary/preview\", data)\n    },\n    // 获取题单的标签列表\n    async getProblemSetLabelList(data: any) {\n        return request.post(\"/ps/problem_set/key\", data)\n    },\n    // 获取题单列表\n    async getProblemSetList(data: any) {\n        return request.post(\"/ps/problem_set/search\", data)\n    },\n    // 获取题单公开信息\n    async getProblemSetPublic(data: any) {\n        return request.post(\"/ps/problem_set/public\", data)\n    },\n\n    //   ---- 公共数据集 -----\n    // 新增一个公共数据\n    async addPublicCheckpoints(data: any) {\n        return request.post(\"/problem/appendCheckpoints\", data)\n    },\n    // 列出题目的检查点\n    async getPublicCheckpoints(data: { problemId: number }) {\n        return request.get(\"/problem/listCheckpoints\", data)\n    },\n    // 删除题目的检查点\n    async delPublicCheckpoints(data: any) {\n        return request.post(\"/problem/deleteCheckpoints\", data)\n    },\n\n    // 新增一个公共数据\n    async addPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/add\", data)\n    },\n    // 列出题目的检查点\n    async getPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/get\", data)\n    },\n    // 删除题目的检查点\n    async delPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/del\", data)\n    },\n\n\n    // 查询互评列表\n    async getSMEList(data: any) {\n        return request.get(\"/sme/\", data)\n    },\n    // 提交互评结果\n    async submitSME(data: any) {\n        return request.post(\"/sme/\", data)\n    },\n    // 查看互评结果\n    async getSMEResult(data: any) {\n        return request.get(\"/sme/results/\", data)\n    },\n\n    //--------------查询教室信息--------------\n    async getUserSeat(params:{groupId:bigint,username:string}){\n        return request.get(\"/classroom/seatList/seatInfo\",params)\n    },\n\n    //--------------用户签到------------------\n    async userCheckin(data:any){\n        return request.post(\"/sign/checkin\",data)\n    },\n    async editUserSign(data:any){\n        return request.post(\"/sign_user/edit\",data)\n    },\n    //---------------录屏相关------------------\n    async screenrecordAddFrame(data: any){\n        return request.post(\"/screenrecord/addFrame\", data);\n    },\n}\n\nexport default cApi;\n","var _defs, _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgMemory({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630745856328,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 7765,\n    id: \"mx_n_1630745856329\",\n    \"data-spm-anchor-id\": \"a313x.7781069.0.i4\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M640 384H384v256h256V384z m-85.333333 170.666667h-85.333334v-85.333334h85.333334v85.333334z m341.333333-85.333334V384h-85.333333V298.666667c0-46.933333-38.4-85.333333-85.333334-85.333334h-85.333333V128h-85.333333v85.333333h-85.333334V128H384v85.333333H298.666667c-46.933333 0-85.333333 38.4-85.333334 85.333334v85.333333H128v85.333333h85.333333v85.333334H128v85.333333h85.333333v85.333333c0 46.933333 38.4 85.333333 85.333334 85.333334h85.333333v85.333333h85.333333v-85.333333h85.333334v85.333333h85.333333v-85.333333h85.333333c46.933333 0 85.333333-38.4 85.333334-85.333334v-85.333333h85.333333v-85.333333h-85.333333v-85.333334h85.333333z m-170.666667 256H298.666667V298.666667h426.666666v426.666666z\",\n    \"p-id\": 7766,\n    \"data-spm-anchor-id\": \"a313x.7781069.0.i5\",\n    className: \"\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMemory);\nexport default __webpack_public_path__ + \"static/media/memory.c49f2d62.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgBomb({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630748477848,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 8485,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M352.75992 413.811573q-4.897178-12.242946-16.650407-17.140124t-23.996174 0q-52.889527 21.547585-93.536107 62.194166t-62.194166 93.536107q-4.897178 12.242946 0 23.996174t17.140125 16.650406q6.366332 2.448589 11.753228 2.448589 20.568149 0 29.38307-19.588713 16.650407-41.136298 48.237207-72.723099t72.723099-48.237207q12.242946-5.386896 17.140125-17.140125t0-23.996174z m461.314203-174.33955l22.527021 22.527021-119.491153 119.001434 33.300813 33.300813q9.304639 9.304639 9.304639 22.282162t-9.304639 22.282162l-31.341941 31.341941q43.584888 78.844572 43.584887 167.973219 0 70.029651-27.17934 133.937829t-73.457675 110.186513-110.186514 73.457676-133.937829 27.17934-133.937829-27.17934-110.186513-73.457676-73.457676-110.186513-27.17934-133.937829 27.17934-133.937829 73.457676-110.186514 110.186513-73.457675 133.937829-27.17934q89.128647 0 167.973219 43.584887l31.341941-31.341941q9.304639-9.304639 22.282162-9.304639t22.282162 9.304639l33.300813 33.300813z m3.917743-27.424199q-4.897178 4.897178-10.773792 4.897178-6.366332 0-11.263511-4.897178l-44.564323-44.074605q-4.407461-4.897178-4.40746-11.263511t4.40746-11.26351q4.897178-4.407461 11.26351-4.407461t11.263511 4.407461l44.074605 44.564323q4.897178 4.407461 4.897178 11.018652t-4.897178 11.018651z m112.635103 112.635103q-5.386896 4.407461-11.26351 4.40746t-11.263511-4.40746l-44.074605-44.564323q-4.897178-4.407461-4.897178-11.018652t4.897178-11.018651q4.407461-4.897178 11.018651-4.897179t11.018652 4.897179l44.564323 44.074605q4.407461 4.897178 4.40746 11.263511t-4.40746 11.26351z m20.078431-89.618365q0 6.85605-4.40746 11.263511t-11.263511 4.40746h-47.012912q-6.85605 0-11.26351-4.40746t-4.407461-11.263511 4.407461-11.26351 11.26351-4.40746h47.012912q6.85605 0 11.263511 4.40746t4.40746 11.26351z m-94.025825-94.025825v47.012913q0 6.85605-4.40746 11.26351t-11.263511 4.407461-11.26351-4.407461-4.40746-11.26351v-47.012913q0-6.85605 4.40746-11.26351t11.26351-4.40746 11.263511 4.40746 4.40746 11.26351z m73.947394 26.934482l-44.564323 44.074605q-4.897178 4.897178-10.773793 4.897178-6.366332 0-11.26351-4.897178-4.897178-4.407461-4.897178-11.018651t4.897178-11.018652l44.074605-44.564323q4.897178-4.407461 11.263511-4.407461t11.26351 4.407461q4.407461 4.897178 4.40746 11.26351t-4.40746 11.263511z\",\n    \"p-id\": 8486\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBomb);\nexport default __webpack_public_path__ + \"static/media/bomb.4a8e9152.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path, _path2, _path3, _path4, _path5;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgOutput({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630750148457,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 9369,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M854 65c19.722 0 35.732 15.856 36 35.503v0.596l-1 363c-0.055 19.882-16.217 35.956-36.1 35.9-19.683-0.053-35.633-15.894-35.897-35.503l-0.003-0.595 0.901-326.901H208v721h240c19.683 0 35.677 15.797 35.995 35.405L484 894c0 19.683-15.797 35.677-35.405 36H172c-19.683 0-35.677-15.797-36-35.405V101c0-19.683 15.797-35.677 35.405-36H854z\",\n    \"p-id\": 9370\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M704 284c19.882 0 36 16.118 36 36 0 19.683-15.797 35.677-35.405 35.995L704 356H320c-19.882 0-36-16.118-36-36 0-19.683 15.797-35.677 35.405-35.995L320 284h384zM320.594 429.5l192.5 0.5c19.882 0.052 35.958 16.211 35.906 36.094-0.051 19.683-15.89 35.636-35.498 35.903l-0.596 0.003-192.5-0.5c-19.882-0.052-35.958-16.211-35.906-36.094 0.051-19.683 15.89-35.636 35.498-35.903l0.596-0.003z\",\n    \"p-id\": 9371\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512 686m37.5 0l300 0q37.5 0 37.5 37.5l0 0q0 37.5-37.5 37.5l-300 0q-37.5 0-37.5-37.5l0 0q0-37.5 37.5-37.5Z\",\n    \"p-id\": 9372\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M754.123846 575.090837m26.516504 26.516504l94.752309 94.752309q26.516504 26.516504 0 53.033009l0 0q-26.516504 26.516504-53.033009 0l-94.752309-94.752309q-26.516504-26.516504 0-53.033009l0 0q26.516504-26.516504 53.033009 0Z\",\n    \"p-id\": 9373\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M754.123856 871.909188m26.516504-26.516505l94.752309-94.752308q26.516504-26.516504 0-53.033009l0 0q-26.516504-26.516504-53.033009 0l-94.752308 94.752309q-26.516504 26.516504 0 53.033008l0 0q26.516504 26.516504 53.033008 0Z\",\n    \"p-id\": 9374\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgOutput);\nexport default __webpack_public_path__ + \"static/media/output.d92b4fe9.svg\";\nexport { ForwardRef as ReactComponent };","import {Component} from \"react\";\nimport {Popover, Tag, Tooltip} from \"antd\";\nimport Icon, {\n    CheckCircleOutlined,\n    ClockCircleOutlined,\n    CloseCircleOutlined,\n    FieldTimeOutlined,\n    SyncOutlined\n} from '@ant-design/icons';\n\nimport {ReactComponent as Memory} from \"Assert/img/memory.svg\"\nimport {ReactComponent as RE} from \"Assert/img/bomb.svg\"\nimport {ReactComponent as OLE} from \"Assert/img/output.svg\"\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport Title from \"antd/lib/typography/Title\";\nimport Text from \"antd/lib/typography/Text\";\nimport {displayType, StateList, TestCaseStates} from \"../../Type/ISubmission\";\nimport {ck} from \"../../Utils/empty\";\n\n\ninterface ViewType {\n    type?: \"tag\" | \"text\" | \"tag-simple\" | \"index\"\n}\n\nexport interface TestCaseProp {\n    caseIndex?: number\n    caseType: TestCaseStates\n    caseScore?: number\n    caseTime?: number\n    caseMemory?: number\n    casePreview?: string\n    append?: string\n    textLevel?: number\n    scoreMod?: displayType\n    caseID?: string\n}\n\ninterface ITestCaseProp extends WithTranslation, TestCaseProp, ViewType {\n}\n\nclass TestCase extends Component<ITestCaseProp, any> {\n\n\n    constructor(props: Readonly<ITestCaseProp> | ITestCaseProp) {\n        super(props);\n        this.state = {\n            MouseIn: false\n        }\n    }\n\n    render() {\n        const NameList = StateList\n        const {t} = this.props\n        const CaseList: { [key: string]: any } = {\n            Pending: {\n                icon: <ClockCircleOutlined/>,\n                text: \"Pending\",\n                textAll: t(\"Pending\"),\n                color: undefined,\n            },\n            Running: {\n                icon: <SyncOutlined spin/>,\n                text: \"Running\",\n                textAll: t(\"Running\"),\n                color: 'blue'\n            },\n            Accepted: {\n                icon: <CheckCircleOutlined/>,\n                text: \"AC\",\n                textAll: t(\"Accepted\"),\n                color: \"success\",\n                type: \"success\",\n                tagColor: \"#3ad506\"\n            },\n            TimeLimitExceeded: {\n                icon: <FieldTimeOutlined/>,\n                text: \"TLE\",\n                textAll: t(\"TimeLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            MemoryLimitExceeded: {\n                icon: <Icon component={Memory}/>,\n                text: \"MLE\",\n                textAll: t(\"MemoryLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            OutputLimitExceeded: {\n                icon: <Icon component={OLE}/>,\n                text: \"OLE\",\n                textAll: t(\"OutputLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            WrongAnswer: {\n                icon: <CloseCircleOutlined/>,\n                text: \"WA\",\n                textAll: t(\"WrongAnswer\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            RuntimeError: {\n                icon: <Icon component={RE}/>,\n                text: \"RE\",\n                textAll: t(\"RuntimeError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#531dab\"\n            },\n            CompilationError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"CE\",\n                textAll: t(\"compilationError\"),\n                color: \"error\",\n                type: \"warning\",\n                tagColor: \"#c46304\"\n            },\n            PresentationError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"PE\",\n                textAll: t(\"formatError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            SystemError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"SE\",\n                textAll: t(\"SystemError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            Queueing: {\n                icon: <ClockCircleOutlined/>,\n                text: \"Queueing\",\n                textAll: t(\"Pending\"),\n                color: undefined\n            },\n            Compiling: {\n                icon: <SyncOutlined spin/>,\n                text: \"Compiling\",\n                textAll: t(\"Compiling\"),\n                color: 'blue'\n            },\n            Judging: {\n                icon: <SyncOutlined spin/>,\n                text: \"Judging\",\n                textAll: t(\"judging\"),\n                color: 'blue'\n            },\n            End: {\n                icon: <CloseCircleOutlined/>,\n                text: \"END\",\n                textAll: t(\"End\"),\n                color: undefined,\n            },\n            Cancelled: {\n                icon: <CloseCircleOutlined/>,\n                text: \"Cancelled\",\n                textAll: t(\"canceled\"),\n                color: \"black\"\n            }\n        }\n\n        const type = NameList[this.props.caseType]\n\n        const visible =\n            !(this.props.caseTime === undefined &&\n                this.props.caseMemory === undefined &&\n                this.props.caseScore === undefined)\n\n        const content: any = visible ? (\n            <>\n                {\n                    this.props.caseTime !== undefined && (\n                        <>\n                            <Text strong>\n                                {this.props.t(\"Time\")}\n                            </Text> : {this.props.caseTime} ms\n                        </>\n                    )\n                }\n                {\n                    this.props.caseMemory !== undefined && (\n                        <>\n                            <br/>\n                            <Text strong>\n                                {this.props.t(\"Memory\")}\n                            </Text> : {Math.floor(this.props.caseMemory / 1024)} MB\n                        </>\n                    )\n                }\n                {\n                    this.props.caseScore !== undefined && this.props.scoreMod === \"show\" && (\n                        <>\n                            <br/>\n                            <Text strong>\n                                {this.props.t(\"Score\")}\n                            </Text> : {this.props.caseType === TestCaseStates.Accepted ? this.props.caseScore : 0}\n                        </>\n                    )\n                }\n            </>\n        ) : <></>\n\n        return (\n            <>\n                {[''].map(() => {\n                    switch (this.props.type) {\n                        case undefined:\n                        case \"tag\":\n                            return (\n                                <span\n                                    onMouseEnter={() => {\n                                        this.setState({MouseIn: true})\n                                    }}\n                                    onMouseLeave={() => {\n                                        this.setState({MouseIn: false})\n                                    }}\n                                    className={\"test-case-e\"}\n                                >\n                                <Popover content={content} visible={visible && this.state.MouseIn}\n                                         zIndex={2001}>\n                                    <Tag icon={CaseList[type].icon} color={CaseList[type].color}>\n                                        #{this.props.caseIndex} {CaseList[type].text}\n                                    </Tag>\n                                </Popover>\n                            </span>\n                            )\n                        case \"tag-simple\":\n                            return (\n                                <Tooltip title={CaseList[type].textAll}>\n                                    <Tag color={CaseList[type].tagColor} className={\"tag-simple\"}>\n                                        {CaseList[type].text}\n                                    </Tag>\n                                </Tooltip>\n                            )\n\n                        case \"text\":\n                            return (\n                                <Title\n                                    level={ck(this.props.textLevel, 5)}\n                                    type={CaseList[type].type}\n                                    className={\"TestCase-text\"}\n                                >\n                                    {CaseList[type].textAll + (this.props.append !== undefined ? this.props.append : \"\")}\n                                </Title>\n                            )\n                        case \"index\":\n                            return (\n                                <span\n                                    onMouseEnter={() => {\n                                        this.setState({MouseIn: true})\n                                    }}\n                                    onMouseLeave={() => {\n                                        this.setState({MouseIn: false})\n                                    }}\n                                    className={\"test-case\"}\n                                >\n                                        <Popover content={content} visible={visible && this.state.MouseIn}\n                                                 zIndex={2001}>\n                                             <Tag color={CaseList[type].color}> #{this.props.caseIndex} </Tag>\n                                        </Popover>\n                                    </span>\n                            )\n                    }\n                    return undefined\n                })}\n            </>\n        )\n    }\n}\n\nexport default withTranslation()(TestCase)\n","export default function deepClone(obj: any) {\n    const _toString = Object.prototype.toString;\n    // null, undefined, non-object, function\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    // DOM Node\n    if (obj.nodeType && 'cloneNode' in obj) {\n        return obj.cloneNode(true);\n    }\n    // Date\n    if (_toString.call(obj) === '[object Date]') {\n        return new Date(obj.getTime());\n    }\n    // RegExp\n    if (_toString.call(obj) === '[object RegExp]') {\n        let flags = [];\n        if (obj.global) {\n            flags.push('g');\n        }\n        if (obj.multiline) {\n            flags.push('m');\n        }\n        if (obj.ignoreCase) {\n            flags.push('i');\n        }\n        return new RegExp(obj.source, flags.join(''));\n    }\n    let result = Array.isArray(obj) ? [] :\n        obj.constructor ? new obj.constructor() : {};\n    for (const key in obj) {\n        result[key] = deepClone(obj[key]);\n    }\n    return result;\n}","export default function apiAddress() {\n    const port = \"8889\"\n\n    if (process.env.NODE_ENV === 'development') return {\n        CLIENT_SERVER: 'http://api.test.sduoj.com:8889',\n        MANAGE_SERVER: 'http://api.test.sduoj.com:8889',\n        FRONT_SERVER: 'http://test.sduoj.com:3000',\n        SOCKET_SERVER: 'ws://api.test.sduoj.com:8889'\n    }\n    return {\n        CLIENT_SERVER: 'https://oj.qd.sdu.edu.cn',\n        MANAGE_SERVER: 'https://oj.qd.sdu.edu.cn',\n        FRONT_SERVER: 'https://oj.qd.sdu.edu.cn',\n        SOCKET_SERVER: \"wss://oj.qd.sdu.edu.cn\"\n    }\n}\n","import {Role} from \"../Type/Iuser\";\n\n\n/**\n * 判断用户当前权限是否满足使用条件\n * @param roles 用户权限\n * @param minRole 最小限制权限\n */\nexport default function judgeAuth(roles: Role[] | undefined, minRole: Role[]): boolean {\n    if (roles === undefined) return false\n    let ok = false;\n    roles.map(v => {\n        if (minRole.includes(v)) ok = true;\n        return undefined\n    })\n    return ok;\n}\n","import {withTranslation} from \"react-i18next\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {Button, message} from \"antd\";\nimport React from \"react\";\nimport {ck} from \"../../../Utils/empty\";\n\nconst ReJudge = (props: any) => {\n    return (\n        <>\n            <Button\n                icon={<ReloadOutlined/>}\n                onClick={() => {\n                    const RejudgeNumber = ck(props.data.length, props.data?.submissionIds?.length)\n                    if (RejudgeNumber === 0) {\n                        message.error(props.t(\"noItemSelected\"))\n                    } else {\n                        props.API(props.data).then((res: any) => {\n                            message.success(props.t(\"retesting\") + RejudgeNumber + props.t(\"submissionInProgress\"))\n                            props.afterSuccess !== undefined && props.afterSuccess()\n                        })\n                    }\n                }}\n            >\n                {props.t(\"rejudging\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(ReJudge)\n","export function initLanguage() {\n    let lang = localStorage.getItem('language') || navigator.language // 获取浏览器的语言环境，兼容IE的写法\n    if (lang) {\n        lang = lang.substr(0, 2).toLowerCase() // 截取前两位字符，并转化为小写\n        return lang\n    } else {\n        return 'en'\n    }\n}\n"," import {\n    checkPointData,\n    examID,\n    groupInfo,\n    groupListQuery,\n    judgeTemplate,\n    loginInfo,\n    modifyProblemsCheckPoint,\n    problemBasic,\n    problemDescription,\n    problemListQuery,\n    query,\n    studentBasic,\n    updateUserStates,\n    userListQuery\n} from '../../Type/types'\nimport {SubmissionQueryType} from \"../../Type/IManage\";\n\nimport request from \"./request\";\nimport {IAddCodesToHub} from \"../../Type/IAnti-cheating\";\n\nconst mApi = {\n    // 配置相关\n    async getCopyright() {\n        return request.get('/site/getCopyright');\n    },\n    // ---------------------- 用户相关 ----------------------\n    /* 通过组号获取比赛列表 */\n    async getContestListByGroupId(params: query) {\n        return request.get('/contest/list', params)\n    },\n    /* 通过组号获取组内学生 */\n    async getStudentListByGroupId(params: groupListQuery) {\n        return request.get('/group/query', params)\n    },\n    async thirdPartyUnbinding(params: { thirdParty: string, username: string }) {\n        return request.get('/manage/user/thirdPartyUnbinding', params)\n    },\n    // 查询用户列表\n    async getUserList(params: userListQuery) {\n        return request.get('/manage/user/list', params);\n    },\n    // 更改用户信息\n    async updateUserInfo(data: studentBasic) {\n        return request.post('/manage/user/update', data);\n    },\n    // 更改用户密码\n    async updateUserPasswd(data: loginInfo) {\n        return request.post('/manage/user/update', data);\n    },\n    // 批量添加用户\n    addUsers: async function (data: (studentBasic & { password: string })[]) {\n        return request.post('/manage/user/addUsers', data);\n    },\n    // 删除用户\n    deleteUsers: async function (data: string[]) {\n        return request.post('/manage/user/delete', data);\n    },\n    // ---------------------- 题目相关 ----------------------\n    // 查询题目列表\n    getProblemList: async function (params: problemListQuery) {\n        return request.get('/manage/problem/list', params);\n    },\n    // 查询题目\n    getProblem: async function (params: { problemCode: string }) {\n        return request.get('/manage/problem/query', params);\n    },\n    // 更新题目信息\n    updateProblemInfo: async function (data: problemBasic) {\n        return request.post('/manage/problem/update', data);\n    },\n    // 创建题目\n    createProblem: async function (data: problemBasic) {\n        return request.post('/manage/problem/create', data);\n    },\n    // ---------------------- 题面相关 ----------------------\n    // 查询题目的描述列表\n    getProblemDescriptionList: async function (params: { problemCode: string }) {\n        return request.get('/manage/problem/queryDescriptionList', params);\n    },\n    // 查询题目描述\n    getProblemDescription: async function (params: { descriptionId: number }) {\n        return request.get('/manage/problem/queryDescription', params);\n    },\n    // 更新题面描述\n    updateDescription: async function (data: problemDescription) {\n        return request.post('/manage/problem/updateDescription', data);\n    },\n    // 创建新题面描述\n    createDescription: async function (data: problemDescription) {\n        return request.post('/manage/problem/createDescription', data);\n    },\n    deleteDescription: async function (params: { id: number }) {\n        return request.get('/manage/problem/deleteDescription', params);\n    },\n    // ---------------------- 测试点相关 ----------------------\n    // checkpoint单点上传\n    uploadSingleCheckpoint: async function (data: checkPointData) {\n        return request.post('/checkpoint/upload', data);\n    },\n    // checkpoint批量上传\n    uploadCheckpointFiles: async function (data: any) {\n        return request.post('/checkpoint/uploadFiles', data,\n            {headers: {\"Content-Type\": \"multipart/form-data\"}}\n        );\n    },\n    // 获取题目的checkpoint列表\n    getCheckpointList: async function (problemCode: string) {\n        return request.get('/manage/checkpoint/list', {problemCode});\n    },\n    // 获取checkpoint详情\n    getCheckpointPreview: async function (checkpointId: string) {\n        return request.get('/checkpoint/query', {checkpointId});\n    },\n    // 全量更新题目的checkpoint\n    updateProblemCheckpoints: async function (data: modifyProblemsCheckPoint) {\n        return request.post('/manage/problem/update', data);\n    },\n    // ---------------------- 比赛相关 ----------------------\n    // 获取比赛列表\n    getContestList: async function (params: query) {\n        return request.get('/manage/contest/page', params);\n    },\n    // 获取单个比赛详情\n    getContest: async function (params: { contestId: number }) {\n        return request.get('/manage/contest/query', params);\n    },\n    // TODO\n    // 更新比赛信息\n    updateContest: async function (data: {}) {\n        return request.post('/manage/contest/update', data);\n    },\n    // 创建比赛\n    createContest: async function (data: {}) {\n        return request.post('/manage/contest/create', data);\n    },\n    // TODO\n    // 综合报表\n    exportComprehensive: async function (data: {}) {\n        return new Promise((resolve, reject) => {\n            request.post<any>('/manage/contest/exportComprehensiveReport', data, {responseType: 'blob'}).then(ret => {\n                resolve(ret);\n                const blob = new Blob([ret.data], {type: ret.headers['content-type']});\n                const elink = document.createElement('a');\n                const filename = new Date().getTime().toString();\n                if ('download' in elink) {\n                    elink.download = filename;\n                    elink.href = URL.createObjectURL(blob);\n                    elink.click();\n                    URL.revokeObjectURL(elink.href);\n                } else {\n                    // window.navigator.msSaveBlob(blob, filename);\n                }\n            }, err => (reject(err)));\n        })\n    },\n    // ----------------- 评测模板相关 -------------------\n    // 查询单个评测模板\n    getOneTemplate: async function (params: any) {\n        return request.get('/manage/judgetemplate/query', params);\n    },\n    // 查询多页评测模板\n    pageTemplateList: async function (params: groupListQuery) {\n        return request.get('/manage/judgetemplate/page', params);\n    },\n    getJudgeTemplateList: async function (params: { type: number, problemCode: string }) {\n        return request.get('/manage/judgetemplate/list', params);\n    },\n    // 创建评测模板\n    createTemplate: async function (data: judgeTemplate) {\n        return request.post('/manage/judgetemplate/create', data);\n    },\n    // 更新评测模板\n    updateTemplate: async function (data: judgeTemplate) {\n        return request.post('/manage/judgetemplate/update', data);\n    },\n    // 评测模板title右模糊匹配\n    queryTemplateTitle: async function (title: string) {\n        return request.get('/manage/judgetemplate/listByTitle', {title});\n    },\n    // ----------------- 评测模板相关 -------------------\n    // 单文件上传\n    // singleUpload: async function (data: { file: any }) {\n    //     return request.post('/filesys/upload', data);\n    // },\n    // 多文件上传\n    // multiUpload: async function (data: { files: any }) {\n    //     return request.post('/filesys/uploadFiles', data);\n    // },\n    // 用 md5 查文件\n    // checkMD5: async function (md5: string) {\n    //     return request.get('/filesys/queryByMd5', {md5});\n    // },\n    // 以zip包下载多个文件\n    zipDownload: async function (data: any, filename?: string) {\n        return request.getZipFile(\"/filesys/zipDownload\", data, {}, filename)\n    },\n    // 以较低地压缩率，较高的速度完成压缩\n    zipDownloadFast: async function (data: any, filename?: string) {\n        return request.getZipFile(\"/filesys/zipDownloadWithoutCompression\", data, {}, filename)\n    },\n    /* ************ group ****************** */\n    createGroup: async function (data: groupInfo) {\n        return request.post('/manage/group/create', data);\n    },\n    updateGroup: async function (data: any) {\n        return request.post('/manage/group/update', data);\n    },\n    getGroupDetail: async function (params: { groupId: number }) {\n        return request.get('/manage/group/query', params);\n    },\n    getGroupList: async function (params: groupInfo) {\n        return request.get('/manage/group/page', params);\n    },\n    updateUserStatus: async function (data: updateUserStates) {\n        return request.post('/manage/group/updateUserStatus', data);\n    },\n    addUsersToGroup: async function (data: { groupId: number, usernames: string[] }) {\n        return request.post('/manage/group/addUser', data);\n    },\n    deleteGroup: async function (params: { groupId: number }) {\n        return request.get('/manage/group/delete', params);\n    },\n    queryGroupTitle: async function (params: { title: string }) {\n        return request.get('/manage/group/listByTitle', params);\n    },\n    /* ************ EXAM ****************** */\n    getExamList: async function (data: any) {\n        return request.post(\"/manage/exam/getInfo\", data);\n    },\n    getExamInfo: async function (examId: examID) {\n        return request.get(\"/manage/exam/getInfo/\" + examId)\n    },\n    createExam: async function (data: any) {\n        return request.post(\"/manage/exam/create\", data)\n    },\n    updateExam: async function (data: any) {\n        return request.post(\"/manage/exam/update\", data)\n    },\n    judgeExam: async function (examId: examID) {\n        return request.get(\"/manage/exam/judge/\" + examId)\n    },\n    getExamSubmission: async function (data: SubmissionQueryType & { examId: examID }) {\n        return request.post(\"/manage/exam/querySubmissionList\", data)\n    },\n    /* ************ 选择题 ****************** */\n    getChoiceList: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/listChoiceProblem\", data)\n    },\n    createChoiceProblem: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/createChoiceProblem\", data)\n    },\n    updateChoiceProblem: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/updateChoiceProblem\", data)\n    },\n    getChoiceInfo: async function (data: string) {\n        return request.get(\"/manage/exam/choiceProblem/queryChoiceProblem?problemCode=\" + data)\n    },\n    getChoiceProblem: async function (params: { problemCode: string }) {\n        return request.get(\"/manage/exam/choiceProblem/queryChoiceProblem\", params)\n    },\n    /* ************ 公告 ****************** */\n    createAnnouncement: async function (data: any) {\n        return request.post(\"/manage/notice/create\", data)\n    },\n    updateAnnouncement: async function (data: any) {\n        return request.post(\"/manage/notice/update\", data)\n    },\n    async getAnnouncementList(data: any) {\n        data['filter'] = \"default\"\n        return request.get(\"/manage/notice/list\", data)\n    },\n    deleteAnnouncement: async function (data: any) {\n        return request.get(\"/manage/notice/delete\", data)\n    },\n    // ----------------- 查重相关 -------------------\n    // 批量添加代码到代码仓库\n    async addCodesToHub(data: IAddCodesToHub[]) {\n        return request.post(\"/manage/codesim/-\", data)\n    },\n\n    // ----------------- 主观题相关 -------------------\n    // async getSubjectiveList(data: any[]) {\n    //     return request.get(\"/manage/subjectiveproblem/list\", data)\n    // },\n    // async createSubjective(data: any) {\n    //     return request.post(\"/manage/subjectiveproblem/create\", data)\n    // },\n    // async updateSubjective(data: any) {\n    //     return request.post(\"/manage/subjectiveproblem/update\", data)\n    // },\n    // async getSubjectiveInfo(data: any) {\n    //     return request.get(\"/manage/subjectiveproblem/query\", data)\n    // },\n\n    // ----------------- 题单相关 -------------------\n    // async getProblemSetList(data: any) {\n    //     return request.post(\"/manage/problemset/list\", data)\n    // },\n    // async createProblemSet(data: any){\n    //     return request.post(\"/manage/problemset/create\", data)\n    // },\n    // async updateProblemSet(data: any){\n    //     return request.post(\"/manage/problemset/update\", data)\n    // },\n    // async getProblemSetInfo(data: any){\n    //     return request.get(\"/manage/problemset/query\", data)\n    // },\n    // -------------- 题单中的题组相关 ------------------\n    // async getProblemSetGroupList(data: any){\n    //     return request.get(\"\", data)\n    // },\n    // async createProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/addProblemGroup\", data)\n    // },\n    // async updateProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/updateProblemGroup\", data)\n    // },\n    // async getProblemSetGroupInfo(data: any){\n    //     return request.get(\"/manage/problemset/queryProblemGroup\", data)\n    // },\n    // async deleteProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/deleteProblem\", data)\n    // },\n    // async updateOrderProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/updateOrder\", data)\n    // },\n    // -------------- 新版题单组件相关 ------------------\n    async createProblemGroup(data: any) {\n        return request.post(\"/ps/group/add\", data)\n    },\n    async editProblemGroup(data: any) {\n        return request.post(\"/ps/group/edit\", data)\n    },\n    async getProblemGroupInfo(data: any) {\n        return request.post(\"/ps/group/info\", data)\n    },\n    async getProblemGroupList(data: any) {\n        return request.post(\"/ps/group/list\", data)\n    },\n    async getProblemGroupSearch(data: any) {\n        return request.post(\"/ps/group/search\", data)\n    },\n\n    async createObjective(data: any) {\n        return request.post(\"/ps/objective/add\", data)\n    },\n    async editObjective(data: any) {\n        return request.post(\"/ps/objective/edit\", data)\n    },\n    async getObjective(data: any) {\n        return request.post(\"/ps/objective/info\", data)\n    },\n\n    async createSubjective(data: any) {\n        return request.post(\"/ps/subjective/add\", data)\n    },\n    async editSubjective(data: any) {\n        return request.post(\"/ps/subjective/edit\", data)\n    },\n    async getSubjective(data: any) {\n        return request.post(\"/ps/subjective/info\", data)\n    },\n\n    async getProblemSetList(data: any) {\n        return request.post(\"/ps/problem_set/list\", data)\n    },\n    async getProblemSetInfo(data: any) {\n        return request.post(\"/ps/problem_set/info\", data)\n    },\n    async createProblemSet(data: any) {\n        return request.post(\"/ps/problem_set/add\", data)\n    },\n    async editProblemSet(data: any) {\n        return request.post(\"/ps/problem_set/edit\", data)\n    },\n\n    // 公共数据集相关\n    // 更新公共数据集测试点信息\n    async updatePublicCheckpoints(data: any) {\n        return request.post(\"/manage/problem/updateCheckpoints\", data)\n    },\n    // 重新排序测试点\n    async reArrangeCheckpoints(data: any) {\n        return request.post(\"/manage/problem/rearrangeCheckpoints\", data)\n    },\n    // 更新公共数据集测试点信息\n    async updatePsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/upd\", data)\n    },\n    // 重新排序测试点\n    async reArrangePsCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/reArr\", data)\n    },\n\n    //--------------教室绑定相关----------------\n    async createClassroom(data: any){\n        return request.post(\"/classroom/createClassroom\",data)\n    },\n    async editClassroom(data: any){\n        return request.post(\"/classroom/editClassroom\",data)\n    },\n    //?\n    async getClassroomInfo(params:{classroomId:number}){\n        return request.get(\"/classroom/classroomInfo\",params)\n    },\n    async getClassroomList(data: any){\n        return request.get(\"/classroom/classroomListInfo\",data)\n    },\n    async createSeatList(data: any){\n        return request.post(\"/classroom/seatList/create\",data);\n    },\n    async editSeatList(data: any){\n        return request.post(\"/classroom/seatList/edit\",data)\n    },\n    //?\n    async getSeatList(data:any){\n        return request.get(\"/classroom/seatList/all/listInfo\",data)\n    },\n    async getSeatListInfo(params:{groupId:number}){\n        return request.get(\"/classroom/seatList/listInfo\",params)\n    },\n\n\n    //--------------签到相关----------------------\n    async createSign(data:any){\n        return request.post(\"/sign/create\",data)\n    },\n    async editSign(data:any){\n        return request.post(`/sign/edit/${data.sg_id}`,data.data)\n    },\n    async deleteSign(params:{sg_id:bigint}){\n        return request.post(\"/sign/info\",params)\n    },\n    async getSignInfo(params:{sg_id:bigint}){\n        return request.get(\"/sign/info\",params)\n    },\n    // async getSignList()\n    async getUserSignList(params:{username:string}){\n        return request.get(\"/sign/list\",params)\n    },\n    async getSignUserInfo(params: {sg_id: number,sg_u_id:number}){\n\n        return request.get('/sign/userInfo', params);\n    },\n    async getSignUserList(params: {sg_id: number}){\n        return request.get('/sign/userList', params);\n    },\n    async deleteUserSign(params:{sg_u_id:bigint}){\n        return request.post(\"/sign_user/delete\",params)\n    },\n    async getSignUSerInfo(params:{sg_id:bigint}){\n        return request.get(\"/sign/userInfo\",params)\n    },\n    //---------------录屏相关-------------------\n    getScreenrecord: async function (params: {v_id: number}){\n        return request.get('/screenrecord/getVideo', params);\n    },\n    deleteScreenrecord: async function (params: {v_id: number}){\n        return request.post('/screenrecord/deleteVideo', params);\n    }\n\n}\n\nexport default mApi;\n","import moment from \"moment\";\n\n\nexport function TimeRangeState(start: number | string, end: number | string) {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    if (start > Date.now()) return \"wait\"\n    if (end < Date.now()) return \"end\"\n    return \"running\"\n}\n\nexport function getDiffSecond(start: number | string, end: number | string) {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    const Start: any = moment(start)\n    const End: any = moment(end)\n    return End.diff(Start, \"second\")\n}\n\nexport function TimeDiff(start: number | string, end: number | string, d: string = \"天\", h: string = \"时\", m: string = \"分\", s: string = \"秒\") {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    const diffSecond: number = getDiffSecond(start, end)\n    let res = \"\"\n    if (Math.floor(diffSecond / 3600 / 24) !== 0)\n        res += Math.floor(diffSecond / 3600 / 24).toString() + d\n    if (Math.floor((diffSecond % (3600 * 24)) / 3600) !== 0)\n        res += Math.floor((diffSecond % (3600 * 24)) / 3600).toString() + h\n    if (Math.floor((diffSecond % 3600) / 60) !== 0)\n        res += Math.floor((diffSecond % 3600) / 60).toString() + m\n    if (diffSecond % 60 !== 0)\n        res += (diffSecond % 60).toString() + s\n    if (res === \"\") res = \"0\" + s\n    return res\n}\n\nexport function unix2Time(time: number | string) {\n    if (typeof time === \"string\") time = parseInt(time)\n    return moment(time).format('YYYY-MM-DD HH:mm:ss')\n}\n\nexport function unix2Date(time: number | string) {\n    if (typeof time === \"string\") time = parseInt(time)\n    return moment(time).format('YYYY-MM-DD')\n}","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemPassword = (props: any) => {\n    let firstPassProps = {name: \"password\", label: props.t(\"password\")}\n    if (props.newpass === true) firstPassProps = {name: \"newPassword\", label: props.t(\"NewPassword\")}\n    if (props.oldpass === true) firstPassProps = {name: \"password\", label: props.t(\"OldPassword\")}\n    return (\n        <>\n            <Form.Item {...firstPassProps}\n                       rules={[\n                           {required: true, message: props.t(\"passwordEmpty\")},\n                       ]}\n                       hasFeedback>\n                <Input.Password/>\n            </Form.Item>\n            {\n                props.oldpass === undefined && props.noConfirm !== true && (\n                    <Form.Item\n                        name=\"confirm\"\n                        label={\n                            props.t(\"confirm\" + (props.newpass ? \"New\" : \"\") + \"Password\")\n                        }\n                        dependencies={[firstPassProps.name]}\n                        hasFeedback\n                        rules={[\n                            {required: true, message: props.t(\"passwordEmptyConfirm\")},\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue(firstPassProps.name) === value)\n                                        return Promise.resolve();\n                                    return Promise.reject(props.t(\"passwordDifferent\"));\n                                },\n                            }),\n                        ]}>\n                        <Input.Password/>\n                    </Form.Item>\n                )\n            }\n        </>\n    )\n}\n\nexport default withTranslation()(ItemPassword)","import i18n from \"i18next\";\nimport {initReactI18next} from 'react-i18next';\nimport enUS from 'antd/lib/locale/en_US';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport {Locale} from \"antd/lib/locale-provider\";\nimport {initLanguage} from \"../Utils/initLanguage\";\nimport moment from \"moment/moment\";\n\ninterface ILanguage {\n    id: string\n    name: string\n    code: string,\n    time: string\n}\n\nexport const language: ILanguage[] = [\n    {\n        id: \"en\",\n        name: \"English\",\n        code: \"en_US\",\n        time: \"en\"\n    },\n    {\n        id: \"zh\",\n        name: \"简体中文\",\n        code: \"zh_CN\",\n        time: \"zh-cn\"\n    }\n]\n\nexport const languageMap: { [key: string]: Locale } = {\n    \"zh\": zhCN,\n    \"en\": enUS\n}\n\nconst defLang = initLanguage();\nconst id_ = language.findIndex((item) => {\n    return item.id === defLang\n})\nmoment.locale(language[id_].time);\n\ni18n.use(initReactI18next) //init i18next\n    .init({\n        //引入资源文件\n        resources: {\n            en: {\n                translation: require(\"../Assert/lang/en.json\"),\n            },\n            zh: {\n                translation: require(\"../Assert/lang/zh.json\"),\n            }\n        },\n        //选择默认语言，选择内容为上述配置中的key，即en/zh\n        lng: defLang,\n        debug: false,\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n\nexport default i18n;\n","import React, {useEffect} from 'react';\nimport useWebSocket, {ReadyState} from 'react-use-websocket';\nimport apiAddress from \"../../Utils/API/apiAddress\";\n\nexport interface IWebSocket {\n    queryList: string[]\n    dataHandle: any\n    open: boolean\n}\n\nexport const SyncJudging = (props: IWebSocket) => {\n    const {sendMessage, lastMessage, readyState} = useWebSocket(\n        apiAddress().SOCKET_SERVER + \"/ws/submission\", {share: false}, props.open\n    );\n\n    useEffect(() => {\n        if (lastMessage !== null) {\n            if (lastMessage.data.length > 2) {\n                const data = JSON.parse(lastMessage.data)\n                if (data instanceof Array && data[0] instanceof Array) {\n                    for (const x of data) props.dataHandle(x)\n                } else {\n                    props.dataHandle(JSON.parse(data))\n                }\n            }\n        }\n    }, [lastMessage]);\n\n    useEffect(() => {\n        if (props.open && readyState === ReadyState.OPEN) {\n            sendMessage(JSON.stringify(props.queryList))\n        }\n    }, [props.queryList, readyState])\n\n    // const connectionStatus = {\n    //     [ReadyState.CONNECTING]: '连接中',\n    //     [ReadyState.OPEN]: '已连接',\n    //     [ReadyState.CLOSING]: '关闭中',\n    //     [ReadyState.CLOSED]: '已关闭',\n    //     [ReadyState.UNINSTANTIATED]: '未知',\n    // }[readyState];\n\n    return (\n        <>\n            {/*<span>(连接状态：{connectionStatus})</span>*/}\n        </>\n    );\n};\n","import React, {Component} from \"react\";\nimport {Spin} from \"antd\";\n\nexport default class Loading extends Component<any, any> {\n    render() {\n        return (\n            <div className={\"page-center\"}>\n                <Spin delay={500} size={\"large\"}> </Spin>\n            </div>\n        )\n    }\n}","import {lazy} from \"react\";\nimport {UrlPrefix} from \"../constValue\";\n\n\nexport interface IBaseRouter {\n    id: number\n    path: string\n    exact?: boolean\n    component?: any\n}\n\nexport interface IRouter extends IBaseRouter {\n    title_i18n: string\n    exact?: boolean\n    icon?: any\n    children?: IRouter[]\n}\n\n// 名称，是否为独立页面\nconst routerCLayoutData: any = [\n    [\"home\", false],\n    [\"problem\", false],\n    [\"contest\", false],\n    [\"problemSet\", false],\n    [\"problemSetPublic\", false],\n    [\"submission\", false],\n    [\"group\", false],\n    // 用户信息页面\n    [\"user\", true],\n    // 账户相关的单独页面\n    [\"login\", true],\n    [\"thirdPartyLogin\", true],\n    [\"resetpass\", true],\n    [\"test\", false],\n    [\"hws\", false],\n    [\"studentMutualEvaluation\", true]\n]\nlet routerCLayout: IBaseRouter[] = []\nlet num = 100;\nfor (const x of routerCLayoutData) {\n    num += 1;\n    routerCLayout.push({\n        id: num,\n        path: UrlPrefix + \"/\" + x[0],\n        exact: x[1],\n        component: lazy(() => import(\"../../Component/layout/CLayout\"))\n    })\n}\n\n\nexport const routerLayout: IBaseRouter[] = [\n    // Layout 大块\n    {\n        id: 0,\n        path: UrlPrefix + \"/manage\",\n        exact: false,\n        component: lazy(() => import('../../Component/layout/MLayout'))\n    },\n    {\n        id: 1,\n        path: UrlPrefix + \"/exam\",\n        exact: false,\n        component: lazy(() => import('../../Component/layout/ELayout'))\n    },\n    {\n        id: 4,\n        path: UrlPrefix,\n        exact: true,\n        component: lazy(() => import('../../Component/layout/CLayout'))\n    },\n    ...routerCLayout,\n    {\n        id: 14,\n        path: UrlPrefix + \"/error/time\",\n        exact: true,\n        component: lazy(() => import('../../Pages/Error/TimeError'))\n    },\n    {\n        id: 15,\n        path: UrlPrefix + \"/error/browser\",\n        exact: true,\n        component: lazy(() => import('../../Pages/Error/BrowserVersionError'))\n    },\n    // {\n    //     id: 998244353,\n    //     path: UrlPrefix + \"/summary/2022cxsjswysj\",\n    //     exact: true,\n    //     component: lazy(() => import('../../Pages/Temp/TSummary'))\n    // },\n    // {\n    //     id: 998244354,\n    //     path: UrlPrefix + \"/contestSubmissionCancel\",\n    //     exact: true,\n    //     component: lazy(() => import('../../Pages/Temp/TCancel'))\n    // },\n    // {\n    //     id: 16,\n    //     path: UrlPrefix + \"/review/:problemSetId/:problemGroup/:problemId/:userId\",\n    //     exact: false,\n    //     component: lazy(() => import('../../Pages/Client/Review'))\n    // },\n]\n\n\nexport function getRouterPath(router: any[], id: number) {\n    for (const x of router) {\n        if (x.id === id) return x.path\n    }\n    return ''\n}\n","import {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {darcula} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Paragraph from \"antd/lib/typography/Paragraph\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\n\nexport interface ICodeHighlight {\n    lang: string\n    code: string\n}\n\nconst CodeHighlight = (props: ICodeHighlight & any) => {\n    //  TODO  此处有 bug，该软件发布的版本过低，其依赖中包含有 bug\n    // 该 bug 由 wrapLines={true} wrapLongLines={true} 引起\n\n    return (\n        <>\n            <Paragraph\n                className={\"SyntaxHighlighter-Copy\"}\n                copyable={\n                    {\n                        tooltips: [props.t(\"Copy\"), props.t(\"Copied\")],\n                        text: props.code\n                    }}\n            />\n            <SyntaxHighlighter\n                language={props.lang}\n                style={darcula}\n                showLineNumbers={true}\n                // wrapLines={true}\n                // wrapLongLines={true}\n            >\n                {props.code}\n            </SyntaxHighlighter>\n        </>\n\n    );\n};\n\nexport default withTranslation()(CodeHighlight)","export type TestCaseType =\n    \"Pending\" | \"Running\" | \"Accepted\" |\n    \"WrongAnswer\" | \"TimeLimitExceeded\" | \"MemoryLimitExceeded\" |\n    \"RuntimeError\" | \"OutputLimitExceeded\"\n\nexport type RunningStateType = \"-4\" | \"-3\" | \"-2\" | \"-1\"\nexport type RunningResultType = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"99\"\nexport const RunningResultList = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"99\"]\n\nexport const SubmissionMap: any = {\n    \"-4\": \"Queueing\",\n    \"-3\": \"Compiling\",\n    \"-2\": \"Judging\",\n    \"-1\": \"End\",\n    \"0\": \"Pending\",\n    \"1\": \"Accepted\",\n    \"2\": \"TimeLimitExceeded\",\n    \"3\": \"MemoryLimitExceeded\",\n    \"4\": \"RuntimeError\",\n    \"5\": \"SystemError\",\n    \"6\": \"WrongAnswer\",\n    \"7\": \"PresentationError\",\n    \"8\": \"CompilationError\",\n    \"9\": \"OutputLimitExceeded\",\n    \"99\": \"Cancelled\"\n}\n\nexport enum TestCaseStates {\n    \"Pending\",\n    \"Running\",\n    \"Accepted\",\n    \"WrongAnswer\",\n    \"TimeLimitExceeded\",\n    \"MemoryLimitExceeded\",\n    \"RuntimeError\",\n    \"OutputLimitExceeded\",\n    \"CompilationError\",\n    \"PresentationError\",\n    \"SystemError\",\n    \"Queueing\",\n    \"Compiling\",\n    \"Judging\",\n    \"End\",\n    \"Cancelled\"\n}\n\n\nexport const StateList =\n    [\"Pending\", \"Running\", \"Accepted\", \"WrongAnswer\", \"TimeLimitExceeded\",\n        \"MemoryLimitExceeded\", \"RuntimeError\", \"OutputLimitExceeded\", \"CompilationError\",\n        \"PresentationError\", \"SystemError\", \"Queueing\", \"Compiling\", \"Judging\", \"End\", \"Cancelled\"]\n\n\nexport const langMap: any = {\n    \"C++11\": \"cpp\",\n    \"C++14\": \"cpp\",\n    \"C++17\": \"cpp\",\n    \"C++20\": \"cpp\",\n    \"C11\": \"c\",\n    \"Java8\": \"java\",\n    \"Java11\": \"java\",\n    \"Python3.6\": \"python\",\n    \"Python3.11\": \"python\",\n    \"cpp11\": \"cpp\"\n}\n\nexport interface checkPointType {\n    RunningResult: RunningResultType\n    Score: number\n    Time: number\n    Memory: number\n}\n\nexport interface submissionInfoType {\n    timeLimit?: number\n    memoryLimit?: number\n    sumScore?: number\n    checkpointNum: number\n    checkpointResults: checkPointType[]\n    code: string | null\n    codeLength: number\n    gmtCreate?: string\n    gmtModified?: string\n    isPublic: number\n    judgeLog: string\n    judgeResult: number\n    judgeScore: number\n    judgeTemplateId: string\n    judgeTemplateTitle: string\n    judgeTemplateType: number\n    problemCode: string\n    problemId: string\n    problemTitle: string\n    submissionId: string\n    usedMemory: number\n    usedTime: number\n    userId: string\n    username: string\n    valid: number\n    zipFileId: string | null\n}\n\n// 对于分数：\n//          完全显示\n//          显示【未通过，部分通过，通过】对应【0分，部分分，满分】\n//          不显示\n// 对于测试点：\n//          完全显示\n//          显示【总测试点数量】与【第一个错误的测试点编号】\n//          不显示\nexport type displayType = \"show\" | \"partial\" | \"disable\"\n\nexport interface TopSubmissionInfoType {\n    title: string\n    TimeLimit?: number\n    MemoryLimit?: number\n    // 对分数的显示模式\n    scoreMod: displayType\n    sumScore?: number   // 在 scoreMod 不是 disable 时，需要提供题目的总分\n    // 对测试点数据的显示模式\n    testcaseMod: displayType\n    // 下载 testcase 的API\n    downloadAPI: any\n    // 请求 Submission 信息的 API\n    QuerySubmissionAPI: any\n    // 重测 API\n    RejudgeAPI?: any\n    // 取消成绩 API\n    InvalidateAPI?: any\n}\n\nexport interface RunningSubmissionInfo {\n    SubmissionId: string\n    TestCaseNumber: number\n    TestCaseInfo: any[]\n}\n\nexport interface SubmissionState {\n    TopSubmissionId?: string\n    TopSubmissionInfo?: TopSubmissionInfoType\n    SubmissionModalVis: boolean\n    submissionListInfo: {[key: string]: any}\n}\n","import {Button, message} from \"antd\";\nimport {useState} from \"react\";\n\nconst SubmitButton = (props: any) => {\n\n    const [loading, setLoading] = useState<boolean>(false)\n\n    return (\n        <Button\n            {...props.btnProps}\n            loading={loading}\n            disabled={loading}\n            onClick={()=>{\n                setLoading(true)\n                props.API().then((res: any)=>{\n                    message.success(res)\n                }).catch((e:any)=>{\n                    // message.error(e)\n                    console.log(e)\n                }).finally(()=>{\n                    setLoading(false)\n                })\n            }}\n        > {props.btnText} </Button>\n    )\n}\n\n\nexport default SubmitButton","// 当 v1 为 undefined 时，使用 v2 替换\nexport const ck = (v1: any, v2: any) => {\n    if (v1 !== undefined) return v1\n    return v2\n}\n\nexport const eck = (v1: any, v2: any) => {\n    if (!isValueEmpty(v1)) return v1\n    return v2\n}\n\nexport const isValueEmpty = (value: any)=>{\n    if(value === undefined) return true\n    if(value === null) return true\n    try{\n        return value.toString().length === 0;\n    }catch (e){\n        return false\n    }\n\n}\n\nexport const get = (x:any, y?:string)=>{\n    if(y === undefined) return x;\n    if(x === undefined) return undefined\n    return x[y]\n}","import apiAddress from \"./apiAddress\";\nimport axios, {AxiosRequestConfig} from \"axios\";\nimport {Get, GetError, Post} from \"../../Type/types\";\nimport {message} from \"antd\";\nimport {UrlPrefix} from \"../../Config/constValue\";\n\nconst baseUrl = apiAddress().CLIENT_SERVER + '/api'\n\nconst service = axios.create({\n    baseURL: baseUrl,\n    timeout: 1000 * 60 * 5, // 超时时间改为 5 分钟\n})\nservice.defaults.withCredentials = true\n\n\nconst getZipFile: any = async (url: string, data: object, config?: AxiosRequestConfig, filename?: string) => {\n    const response = await service.post(url, data, {\n        ...config, responseType: 'blob'\n    });\n    try {\n        let blob = new Blob([response.data], {type: 'application/zip'})\n        let Url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = Url\n        link.download = filename ?? `${Date.now()}-TestCase.zip`\n        link.click()\n        URL.revokeObjectURL(Url)\n    } catch (e) {\n        return Promise.reject(e)\n    }\n    return Promise.resolve()\n}\n\n\nconst messageDisabledList = [\n    \"/user/getProfile\",\n    \"/submit/queryACProblem\",\n    \"/group/my\"\n]\n\nconst dealResponse = async (resp: any, url: string) => {\n    try {\n        const response = await resp;\n        localStorage.setItem('server-time', response.data.timestamp)\n        if (Math.abs(response.data.timestamp - Date.now()) > 60000) {\n            window.location.replace(UrlPrefix + \"/error/time\")\n            message.error(\"本地时间异常\")\n            return Promise.reject(\"本地时间异常\")\n        }\n        switch (response.data.code) {\n            case 0:\n                return response.data.data\n            default:\n                message.error(response.data.message);\n                return Promise.reject(response.data.message)\n        }\n    } catch (e: any) {\n        const response = e.response\n        if (response === undefined) {\n            message.error(\"服务器不可达\")\n            return Promise.reject(\"服务器不可达\")\n        }\n        switch (response.data.code) {\n            case 401:\n                if (messageDisabledList.indexOf(url) === -1) {\n                    let pos = window.location.href.indexOf(UrlPrefix)\n                    let to = window.location.href.substring(pos).split(\"?\")[0]\n                    if (to !== \"/login\")\n                        window.location.replace(UrlPrefix + \"/login?to=\" + to)\n                    message.error(response.data.message);\n                }\n                return Promise.reject(response.data.message)\n            default:\n                if (messageDisabledList.indexOf(url) === -1)\n                    message.error(response.data.message);\n                return Promise.reject(response.data.message)\n        }\n    }\n}\n\nconst get: Get | GetError = async (url: string, params?: object, config?: AxiosRequestConfig) => {\n    return await dealResponse(service.get(url, {\n        ...{headers: {\"Cache-Control\": \"no-cache, no-store, must-revalidate\"}}, params, ...config,\n    }), url)\n}\n\nconst post: Post | GetError = async (url: string, data: object, config?: AxiosRequestConfig) => {\n    return await dealResponse(service.post(url, data, {\n        ...{headers: {\"Cache-Control\": \"no-cache, no-store, must-revalidate\"}}, ...config\n    }), url);\n}\n\nconst request = {\n    get,\n    post,\n    getZipFile\n}\nexport default request;\n","// 表格中的默认页数\nexport const defaultPageSize = 20\nexport const UrlPrefix = \"/v2\"\nexport const MaxCodeLength = 1024 * 50\n\nexport const PREDEFINED_CHECKERS = [\n    {\n        name: 'lcmp.cpp',\n        description: 'Lines, ignores whitespaces'\n    },\n    {\n        name: 'hcmp.cpp',\n        description: 'Single huge integer'\n    },\n    {\n        name: 'ncmp.cpp',\n        description: 'Single or more int64, ignores whitespaces'\n    },\n    {\n        name: 'nyesno.cpp',\n        description: 'Zero or more yes/no, case insensitive'\n    },\n    {\n        name: 'rcmp4.cpp',\n        description: 'Single or more double, max any error 1E-4'\n    },\n    {\n        name: 'rcmp6.cpp',\n        description: 'Single or more double, max any error 1E-6'\n    },\n    {\n        name: 'rcmp9.cpp',\n        description: 'Single or more double, max any error 1E-9'\n    },\n    {\n        name: 'wcmp.cpp',\n        description: 'Sequence of tokens'\n    },\n    {\n        name: 'yesno.cpp',\n        description: 'Single yes or no, case insensitive'\n    }\n];\n\n\nexport const SPJ_Code = `/*\n此代码需要使用 C++ 编写，可以使用 Testlib 库，\n其用法请参见：https://oi-wiki.org/tools/testlib/\n*/`\n\nexport const SPJ_Config = `{\n  \"compile\": {\n    \"srcName\": \"spj.cc\",\n    \"maxCpuTime\": 5000,\n    \"maxRealTime\": 6000,\n    \"maxMemory\": 262144,\n    \"commands\": [\n      \"/usr/bin/g++ -I/ -DONLINE_JUDGE -O2 -w -fmax-errors=3 -std=c++11 spj.cc -lm -o spj\"\n    ]\n  },\n  \"run\": {\n    \"command\": \"spj\",\n    \"seccompRule\": null,\n    \"maxCpuTimeFactor\": 2,\n    \"maxRealTimeFactor\": 2,\n    \"maxMemoryFactor\": 1,\n    \"envs\": null\n  }\n}`\n\nexport const NEWLINE_CONVERT_INDEX = {\n    DEFAULT: '',\n    DOS2UNIX: 'dos2unix',\n    UNIX2DOS: 'unix2dos'\n};\n\nexport const NEWLINE_CONVERT = {\n    [NEWLINE_CONVERT_INDEX.DOS2UNIX]: {\n        name: NEWLINE_CONVERT_INDEX.DOS2UNIX,\n        description: '将 DOS(CR-LF) 转化为 UNIX(LF)'\n    },\n    [NEWLINE_CONVERT_INDEX.UNIX2DOS]: {\n        name: NEWLINE_CONVERT_INDEX.UNIX2DOS,\n        description: '将 UNIX(LF) 转化为 DOS(CR-LF)'\n    },\n    [NEWLINE_CONVERT_INDEX.DEFAULT]: {\n        name: NEWLINE_CONVERT_INDEX.DEFAULT,\n        description: '不进行转化'\n    }\n};\n\nexport const scoreModeDefault = `{\n    \"key\": \"1\",\n    \"title\": \"作业\",\n    \"score\": 100,\n    \"children\": [\n        {\n            \"key\": \"1-1\",\n            \"title\": \"T1\",\n            \"score\": 50,\n            \"answer\": \"$15$\",\n            \"info\": [\n                [10, \"全部正确\"],\n                [5, \"部分正确\"],\n                [0, \"错误\"]\n            ]\n        },\n        {\n            \"key\": \"1-2\",\n            \"title\": \"T2\",\n            \"score\": 50,\n            \"answer\": \"$64$\",\n            \"info\": [\n                [10, \"全部正确\"],\n                [5, \"部分正确\"],\n                [0, \"错误\"]\n            ]\n        },\n    ]\n}`","import {withTranslation} from \"react-i18next\";\nimport {Alert, Progress, Steps} from \"antd\";\nimport {ClimbingBoxLoader} from \"react-spinners\";\nimport Title from \"antd/es/typography/Title\";\nimport {RunningStateType, SubmissionState, TestCaseStates} from \"../../../Type/ISubmission\";\nimport TestCase from \"../TestCase\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport {isValueEmpty} from \"../../../Utils/empty\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport ReJudge from \"../Func/ReJudge\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\nimport {connect} from \"react-redux\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {Dispatch} from \"react\";\n\nconst Running = (props: any) => {\n    const {Step} = Steps\n    const {\n        RunningState,\n        RunningResult,\n        submissionInfo,\n        TestCaseStateList,\n        PublicTestCaseStateList,\n        scoreMod,\n        testcaseMod\n    } = props\n\n    const getRunningIcon = (w: RunningStateType) => {\n        if (w === RunningState) return <LoadingOutlined/>\n        return undefined\n    }\n    const getRunningState = (w: RunningStateType) => {\n        // 处理编译错误\n        if (RunningState === \"-1\" && RunningResult === \"8\") {\n            if (w === \"-4\") return \"finish\"\n            if (w === \"-3\") return \"error\"\n            if (w === \"-2\") return \"wait\"\n            // 处理系统错误\n        } else if (RunningState === \"-1\" && RunningResult === \"5\") {\n            if (w === \"-4\") return \"finish\"\n            if (w === \"-3\") return \"finish\"\n            if (w === \"-2\") return \"error\"\n        } else {\n            if (w === RunningState) return \"process\"\n            if (parseInt(w) < parseInt(RunningState)) return \"finish\"\n            return \"wait\"\n        }\n    }\n    const getACScore = () => {\n        let scoreAC = 0\n        const Tcl = TestCaseStateList\n        for (let i = 0; i < Tcl.length; i++) {\n            const add: number = Tcl[i].caseScore === undefined ? 0 : Tcl[i].caseScore\n            if (Tcl[i].caseType === TestCaseStates.Accepted) scoreAC += add\n        }\n        return scoreAC\n    }\n    return (\n        <>\n            <Steps>\n                <Step status={getRunningState(\"-4\")} title=\"Queueing\" icon={getRunningIcon(\"-4\")}/>\n                <Step status={getRunningState(\"-3\")} title=\"Compiling\" icon={getRunningIcon(\"-3\")}/>\n                <Step status={getRunningState(\"-2\")} title=\"Judging\" icon={getRunningIcon(\"-2\")}/>\n            </Steps>\n\n            {/*\n                显示评测 log\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {[\"\"].map(() => {\n                    if (submissionInfo !== undefined) {\n                        if (!isValueEmpty(submissionInfo.judgeLog)) {\n                            let obj: {\n                                message: string,\n                                type: \"error\" | \"info\" | \"success\" | \"warning\" | undefined\n                            }\n                            if (RunningResult === \"8\") obj = {message: props.t(\"CompileFailed\"), type: \"error\"}\n                            else if (RunningResult === \"5\") obj = {message: props.t(\"SystemError\"), type: \"error\"}\n                            else obj = {message: props.t(\"judgingLog\"), type: \"info\"}\n                            return (\n                                <Alert\n                                    description={<pre className=\"preAutoLine\">{submissionInfo.judgeLog}</pre>}\n                                    showIcon={true}\n                                    {...obj}\n                                />\n                            )\n                        }\n                    }\n                    return undefined\n                })}\n            </div>\n\n            {judgeAuth(props.roles, [\"admin\", \"superadmin\"])\n                && (RunningState !== \"-4\" && RunningState !== \"-3\" && RunningState !== \"-2\") &&\n                (\n                    <div style={{marginTop: \"30px\"}}>\n                        <ReJudge\n                            API={props.RejudgeAPI ?? cApi.rejudge}\n                            data={[submissionInfo.submissionId]}\n                            afterSuccess={props.refresh}\n                        />\n                    </div>\n                )}\n\n            {/*\n                排队中的提示\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {(RunningState === \"-4\" || RunningState === \"-3\") && (\n                    <div style={{textAlign: \"center\", paddingTop: \"100px\"}}>\n                        <ClimbingBoxLoader color={\"#99CCFF\"} loading={true} size={15}/>\n                        <div style={{marginTop: \"50px\"}}>\n                            {RunningState === \"-4\" && (<>{props.t(\"inQueue,PleaseWait...\")}</>)}\n                            {RunningState === \"-3\" && (<>{props.t(\"compilationInProgress,PleaseWait...\")}</>)}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/*\n                当前获得的分数\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    RunningState === \"-2\" && scoreMod === \"show\" && (\n                        <>\n                            <Title level={4}> {props.t(\"CurrentScore\")} </Title>\n                            <Title level={5}> {getACScore()} </Title>\n                        </>\n                    )\n                }\n            </div>\n\n            {/*\n                显示评测进度\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    RunningResult !== \"8\" &&\n                    RunningResult !== \"5\" &&\n                    testcaseMod !== \"show\" && (\n                        [''].map(() => {\n                            let JudgedNum = 0\n                            for (const x of TestCaseStateList) {\n                                if (x.caseType !== TestCaseStates.Pending) JudgedNum += 1\n                            }\n                            return (\n                                <>\n                                    <Title level={4}> {props.t(\"testingProgress\")} </Title>\n                                    <div style={{textAlign: \"center\"}}>\n                                        <Progress\n                                            percent={JudgedNum / TestCaseStateList.length * 100}\n                                            type=\"dashboard\" status=\"normal\"\n                                            format={() => {\n                                                return (\n                                                    <span style={{fontSize: 18}}>\n                                                        {Math.floor(JudgedNum / TestCaseStateList.length * 100)} / 100%\n                                                    </span>\n                                                )\n                                            }}\n                                        />\n                                    </div>\n                                </>\n                            )\n                        })\n                    )\n                }\n            </div>\n\n            {/*显示测试点详细信息*/}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    (RunningState === \"-2\" || RunningState === \"-1\") &&     // 已经到达了测试点阶段\n                    RunningResult !== \"8\" && RunningResult !== \"5\" &&       // 不是编译错误或系统错误\n                    testcaseMod === \"show\" && (                             // 测试点设置为可显示\n                        <>\n                            {TestCaseStateList.length !== 0 && (\n                                <div>\n                                    <Title level={4}> {props.t(\"TestCaseInfo\")} </Title>\n                                    <div style={{display: \"flex\", justifyContent: \"left\", flexWrap: \"wrap\"}}>\n                                        {TestCaseStateList.map((value: any) => {\n                                            return <TestCase {...value} scoreMod={scoreMod}/>\n                                        })}\n                                    </div>\n\n                                </div>\n                            )}\n                            {PublicTestCaseStateList.length !== 0 && (\n                                <div style={{marginTop: 30}}>\n                                    <Title level={4}> {props.t(\"PublicTestCaseInfo\")} </Title>\n                                    <div style={{display: \"flex\", justifyContent: \"left\", flexWrap: \"wrap\"}}>\n                                        {PublicTestCaseStateList.map((value: any) => {\n                                            return <TestCase {...value} scoreMod={scoreMod}/>\n                                        })}\n                                    </div>\n                                </div>\n                            )}\n                        </>\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const SubState: SubmissionState = state.SubmissionReducer\n\n    return {\n        roles: UState.userInfo?.roles,\n        RejudgeAPI: SubState.TopSubmissionInfo?.RejudgeAPI,\n        InvalidateAPI: SubState.TopSubmissionInfo?.InvalidateAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(Running))\n","import {Component} from \"react\";\nimport {Button, Card, Col, Progress, Row, Space, Tabs} from \"antd\";\nimport {WithTranslation, withTranslation} from \"react-i18next\";\nimport TestCase, {TestCaseProp} from \"../TestCase\";\nimport {displayType, StateList, TestCaseStates} from \"../../../Type/ISubmission\";\nimport mApi from \"../../../Utils/API/m-api\";\n\n\ninterface IJudgeResult extends WithTranslation {\n    data: TestCaseProp[]\n    sumScore: number\n    scoreMod: displayType\n    title: string,\n    useDownload: boolean\n}\n\nclass JudgeResult extends Component<IJudgeResult, any> {\n\n\n    render() {\n\n        const getInfo = () => {\n            const {data} = this.props\n            let numList = Array(StateList.length)\n            let scoreAC = 0, ACNumber = 0, firstRejectId: string = \"\"\n            for (let i = 0; i < StateList.length; i++) numList[i] = []\n            for (let i = 0; i < data.length; i++) {\n                // @ts-ignore\n                const add: number = data[i].caseScore === undefined ? 0 : data[i].caseScore\n                numList[data[i].caseType].push(data[i])\n                scoreAC += add\n                if (data[i].caseType === TestCaseStates.Accepted) {\n                    ACNumber++;\n                } else {\n                    if (firstRejectId.length === 0)\n                        firstRejectId = data[i].caseID ?? \"\"\n                }\n\n            }\n            return {\n                numList: numList, AC: scoreAC, SumAll: this.props.sumScore,\n                ACNumber: ACNumber, CaseNumber: data.length,\n                firstRejectId: firstRejectId\n            }\n        }\n        const info = getInfo()\n\n        return (\n            <Card\n                size=\"small\"\n                title={<span style={{fontWeight: \"bold\"}}>{this.props.title}</span>}\n                className={\"card\"}\n                extra={<>\n                    {info.firstRejectId.length !== 0 && this.props.useDownload && (\n                        <Button type={\"dashed\"} size={\"small\"}  danger onClick={() => {\n                            mApi.getCheckpointPreview(info.firstRejectId).then((checkpoint: any) => {\n                                // TODO 先查询积分是否足够，\n                                // 如果足够，直接扣除，并给作者增加积分\n                                mApi.zipDownload([\n                                    {\n                                        id: checkpoint.inputFileId,\n                                        downloadFilename: checkpoint.inputFilename ?? `${info.firstRejectId}.in`\n                                    },\n                                    {\n                                        id: checkpoint.outputFileId,\n                                        downloadFilename: checkpoint.outputFilename ?? `${info.firstRejectId}.out`\n                                    }\n                                ])\n                            })\n\n                        }}>\n                            {this.props.t(\"DownloadFirstRejectCase\")}\n                        </Button>\n                    )}\n                </>}\n            >\n                <Row>\n                    <Col span={18}>\n                        <Tabs defaultActiveKey=\"0\" tabPosition={\"left\"} className={\"JudgeResult-tab\"}>\n                            {info.numList.map((value, index) => {\n                                if (value.length !== 0) {\n                                    return (\n                                        <Tabs.TabPane\n                                            tab={(\n                                                <Space>\n                                                    <TestCase type={\"tag-simple\"} caseType={index}/>\n                                                    <span> x {value.length}</span>\n                                                </Space>\n                                            )}\n                                            key={index}\n                                        >\n                                            {value.length !== 0 && (\n                                                <Card\n                                                    size={\"small\"}\n                                                    title={<TestCase type={\"text\"} caseType={index}/>}\n                                                >\n                                                    <div style={{\n                                                        display: \"flex\",\n                                                        justifyContent: \"left\",\n                                                        flexWrap: \"wrap\"\n                                                    }}>\n                                                        {value.map((val: any) => {\n                                                            return <TestCase type={\"index\"} {...val}/>\n                                                        })}\n                                                    </div>\n\n                                                </Card>\n                                            )}\n                                        </Tabs.TabPane>\n                                    )\n                                }\n                                return undefined\n                            })}\n                        </Tabs>\n                    </Col>\n                    <Col span={6} className={\"Progress-set\"}>\n                        {this.props.scoreMod === \"show\" && (\n                            <>\n                                <Progress\n                                    success={{percent: info.AC / info.SumAll * 100}}\n                                    type=\"dashboard\"\n                                    format={() => `${info.AC} / ${info.SumAll}`}\n                                />\n                                <span>{this.props.t(\"Score\")}</span>\n                            </>\n                        )}\n                        {this.props.scoreMod !== \"show\" && (\n                            <>\n                                <Progress\n                                    success={{percent: info.ACNumber / info.CaseNumber * 100}}\n                                    type=\"dashboard\"\n                                    format={() => `${info.ACNumber} / ${info.CaseNumber}`}\n                                />\n                                <span>{this.props.t(\"acceptedNumber\")}</span>\n                            </>\n                        )}\n                    </Col>\n                </Row>\n            </Card>\n        )\n    }\n}\n\n\nexport default withTranslation()(JudgeResult)\n","import {withTranslation} from \"react-i18next\";\nimport {Button, message} from \"antd\";\nimport {CloseOutlined} from \"@ant-design/icons\";\n\nconst Invalidate = (props: any)=>{\n    return (\n        <>\n            <Button\n                icon={<CloseOutlined />}\n                onClick={()=>{\n                    props.API(props.data).then((res: any)=>{\n                        message.success(props.t(\"canceledResults\"))\n                        props.afterSuccess !== undefined && props.afterSuccess()\n                    })\n                }}\n            >\n                {props.t(\"cancelResults\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(Invalidate)\n","import {withTranslation} from \"react-i18next\";\nimport {Button} from \"antd\";\nimport {DownloadOutlined} from \"@ant-design/icons\"\n\nconst DownloadTestCase = (props: any) =>{\n    return (\n        <>\n            <Button icon={<DownloadOutlined />}>\n                {props.t(\"downloadData\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(DownloadTestCase)\n","import {withTranslation} from \"react-i18next\";\nimport Title from \"antd/es/typography/Title\";\nimport {Card, Col, Progress, Row, Space, Statistic, Table} from \"antd\";\nimport JudgeResult from \"./JudgeResult\";\nimport {StateList, SubmissionMap, SubmissionState, TestCaseStates} from \"../../../Type/ISubmission\";\nimport {unix2Time} from \"../../../Utils/Time\";\nimport TestCase from \"../TestCase\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport ReJudge from \"../Func/ReJudge\";\nimport Invalidate from \"../Func/Invalidate\";\nimport DownloadTestCase from \"../Func/DownloadTestCase\";\nimport {connect} from \"react-redux\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {Dispatch} from \"react\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\n\nconst Summary = (props: any) => {\n    const {TestCaseStateList, submissionInfo, PublicTestCaseStateList} = props\n    const getCaseInfo = () => {\n        let scoreAC = 0, scoreSum = 0, mxTime: number = 0, mxMem: number = 0\n        let SumTime = 0, SumMem = 0, firstUnACCaseNumber = undefined\n        const Tcl = TestCaseStateList\n        for (let i = 0; i < Tcl.length; i++) {\n            const add: number = Tcl[i].caseScore === undefined ? 0 : Tcl[i].caseScore\n            // 找到第一个没有 AC 的测试点\n            if (firstUnACCaseNumber === undefined && Tcl[i].caseType !== TestCaseStates.Accepted)\n                firstUnACCaseNumber = i + 1\n            if (Tcl[i].caseType === TestCaseStates.Accepted) {\n                scoreAC += add\n                scoreSum += add\n            } else if (Tcl[i].caseType === TestCaseStates.Pending\n                || Tcl[i].caseType === TestCaseStates.Running) scoreSum += add\n            // scoreAll += add\n            const caseTime: number = Tcl[i].caseTime === undefined ? 0 : Tcl[i].caseTime\n            const caseMem: number = Tcl[i].caseMemory === undefined ? 0 : Tcl[i].caseMemory\n\n            if (mxTime < caseTime) mxTime = caseTime\n            if (mxMem < caseMem) mxMem = caseMem\n            SumTime += caseTime\n            SumMem += caseMem\n        }\n        return {\n            AC: scoreAC, SumRunning: scoreSum, SumAll: props.sumScore,\n            mxTime: mxTime, mxMem: mxMem, SumTime: SumTime, AvgMem: SumMem / Tcl.length,\n            firstUnACCaseNumber: firstUnACCaseNumber\n        }\n    }\n    const info = getCaseInfo()\n    return (\n        <>\n            <Title level={4}> {props.t(\"Overview\")}</Title>\n            <Row style={{marginBottom: 20}}>\n                <Col span={11}>\n                    <Card size={\"small\"}\n                          title={<span style={{fontWeight: \"bold\"}}>{props.t(\"judgingInformation\")}</span>}>\n                        <Table\n                            size={\"small\"}\n                            pagination={false}\n                            dataSource={[\n                                {\n                                    key: props.t(\"conclusion\"),\n                                    value: (\n                                        <Space>\n                                            <TestCase\n                                                type={\"text\"}\n                                                caseType={StateList.indexOf(SubmissionMap[submissionInfo.judgeResult])}\n                                            />\n                                            {props.testcaseMod !== \"disable\" &&\n                                                info.firstUnACCaseNumber !== undefined &&\n                                                submissionInfo.judgeResult !== 99 && (\n                                                    <span>\n                                                    ({props.t(\"OnTestCase\")}{info.firstUnACCaseNumber})\n                                                </span>\n                                                )}\n                                        </Space>\n                                    )\n                                },\n                                {key: props.t(\"index\"), value: submissionInfo.submissionId},\n                                {key: props.t(\"submissionTime\"), value: unix2Time(submissionInfo.gmtCreate)},\n                                {key: props.t(\"judgingTime\"), value: unix2Time(submissionInfo.gmtModified)},\n                                {key: props.t(\"template\"), value: submissionInfo.judgeTemplateTitle},\n                            ]}\n                            showHeader={false}\n                            columns={[\n                                {dataIndex: \"key\"},\n                                {dataIndex: \"value\"}\n                            ]}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12} offset={1}>\n                    <Card size={\"small\"}\n                          title={<span style={{fontWeight: \"bold\"}}>{props.t(\"affiliateInformation\")}</span>}>\n                        <Table\n                            size={\"small\"}\n                            pagination={false}\n                            dataSource={[\n                                {\n                                    key: props.t(\"submitUser\"),\n                                    value: submissionInfo.username + \" (ID: \" + submissionInfo.userId + \")\"\n                                },\n                                {\n                                    key: props.t(\"problemInformation\"),\n                                    value: submissionInfo.problemTitle + \"(\" + submissionInfo.problemCode + \")\"\n                                }\n                            ]}\n                            showHeader={false}\n                            columns={[\n                                {dataIndex: \"key\"},\n                                {dataIndex: \"value\"}\n                            ]}\n                        />\n                    </Card>\n                    {judgeAuth(props.roles, [\"admin\", \"superadmin\"]) && (\n                        <Card\n                            size={\"small\"}\n                            title={<span style={{fontWeight: \"bold\"}}>{props.t(\"operator\")}</span>}\n                            style={{marginTop: 20}}\n                        >\n                            <Space direction={\"horizontal\"}>\n                                <ReJudge\n                                    API={props.RejudgeAPI ?? cApi.rejudge}\n                                    data={[submissionInfo.submissionId]}\n                                    afterSuccess={props.refresh}\n                                />\n                                <Invalidate\n                                    API={props.InvalidateAPI ?? cApi.invalidateSubmission}\n                                    data={{submissionId: submissionInfo.submissionId}}\n                                    afterSuccess={props.refresh}\n                                />\n                                {/*此处需要传入：\n                            1. 获取测试单信息的异步函数\n                            2. 当前的测试点信息\n\n                            实现：\n                            1. 下载第一个错误测试点的数据\n                            2. 打包下载全部测试点（弹窗确认）\n                            3. 选择测试点进行下载（弹窗，可以多选，可以单点下载）\n                            */}\n                                <DownloadTestCase\n                                />\n\n                            </Space>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {props.submissionInfo.judgeResult !== 99 && TestCaseStateList.length !== 0 && (\n                <Card\n                    size=\"small\"\n                    title={<span style={{fontWeight: \"bold\"}}>{props.t(\"Statistics\")}</span>}\n                    className={\"card\"}\n                >\n                    <Row>\n                        {props.scoreMod !== \"disable\" && props.sumScore !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {props.scoreMod === \"show\" && (\n                                    <>\n                                        <Progress\n                                            success={{percent: info.AC / info.SumAll * 100}}\n                                            type=\"dashboard\"\n                                            format={() => `${info.AC} / ${info.SumAll}`}\n                                        />\n                                        <span>{props.t(\"TotalScore\")}</span>\n                                    </>\n                                )}\n                                {props.scoreMod === \"partial\" && (\n                                    <>\n                                        <div style={{marginTop: \"50px\", marginBottom: \"40px\"}}>\n                                            {info.AC === info.SumAll && (\n                                                <Title level={5} style={{color: \"green\"}}>{props.t(\"allPassed\")}</Title>\n                                            )}\n                                            {info.AC !== info.SumAll && info.AC !== 0 && (\n                                                <Title level={5}\n                                                       style={{color: \"orange\"}}>{props.t(\"partiallyPassed\")}</Title>\n                                            )}\n                                            {info.AC === 0 && (\n                                                <Title level={5} style={{color: \"red\"}}>{props.t(\"failed\")}</Title>\n                                            )}\n                                        </div>\n                                        <span>{props.t(\"JudgeResult\")}</span>\n                                    </>\n                                )}\n                            </Col>\n                        )}\n                        {props.TimeLimit === undefined && (\n                            <Col span={6} style={{margin: \"auto\"}}>\n                                <Statistic title={props.t(\"MaximumTime\")}\n                                           value={info.mxTime}\n                                           suffix=\"ms\"/>\n                            </Col>\n                        )}\n                        {props.TimeLimit !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {\n                                    [''].map(() => {\n                                        let obj: any = {\n                                            percent: 100,\n                                            status: \"exception\"\n                                        }\n                                        if (info.mxTime <= props.TimeLimit)\n                                            obj = {success: {percent: info.mxTime / props.TimeLimit * 100}}\n                                        return (\n                                            <Progress\n                                                {...obj}\n                                                type=\"dashboard\"\n                                                format={() => `${info.mxTime} / ${props.TimeLimit} ms`}\n                                            />\n                                        )\n                                    })\n                                }\n                                <span>{props.t(\"MaximumTime\")}</span>\n                            </Col>\n                        )}\n                        {props.MemoryLimit === undefined && (\n                            <Col span={6} style={{margin: \"auto\"}}>\n                                <Statistic title={props.t(\"MaximumMemory\")}\n                                           value={Math.floor(info.mxMem / 1024)}\n                                           suffix=\"MB\"/>\n                            </Col>\n                        )}\n                        {props.MemoryLimit !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {\n                                    [''].map(() => {\n                                        let obj: any = {\n                                            percent: 100,\n                                            status: \"exception\"\n                                        }\n                                        if (info.mxMem <= props.MemoryLimit)\n                                            obj = {success: {percent: info.mxMem / props.MemoryLimit * 100}}\n                                        return (\n                                            <Progress\n                                                {...obj}\n                                                type=\"dashboard\"\n                                                format={() => `${Math.floor(info.mxMem / 1024)} / ${Math.floor(props.MemoryLimit / 1024)} MB`}\n                                            />\n                                        )\n                                    })\n                                }\n                                <span>{props.t(\"MaximumMemory\")}</span>\n                            </Col>\n                        )}\n                        {props.scoreMod !== \"disable\" && props.sumScore !== undefined && (\n                            <Col className={\"Progress-set-Statistic\"} span={6}>\n                                <Statistic title={props.t(\"TotalRunningTime\")}\n                                           value={info.SumTime}\n                                           suffix=\"ms\"/>\n                                <Statistic className={\"Progress-set-Statistic-cell\"}\n                                           title={props.t(\"AvgMemory\")}\n                                           value={Math.floor(info.AvgMem / 1024)}\n                                           suffix=\"MB\"/>\n                            </Col>\n                        )}\n                        {(props.scoreMod === \"disable\" || props.sumScore === undefined) && (\n                            <>\n                                <Col span={6} style={{margin: \"auto\"}}>\n                                    <Statistic title={props.t(\"TotalRunningTime\")}\n                                               value={info.SumTime}\n                                               suffix=\"ms\"/>\n                                </Col>\n                                <Col span={6} style={{margin: \"auto\"}}>\n                                    <Statistic className={\"Progress-set-Statistic-cell\"}\n                                               title={props.t(\"AvgMemory\")}\n                                               value={Math.floor(info.AvgMem / 1024)}\n                                               suffix=\"MB\"/>\n                                </Col>\n                            </>\n                        )}\n\n                    </Row>\n                </Card>\n            )}\n            {props.testcaseMod === \"show\" &&\n                props.submissionInfo.judgeResult !== 99 &&\n                TestCaseStateList.length !== 0 && (\n                    <>\n                        <Title level={4}> {props.t(\"JudgeResult\")}</Title>\n                        <JudgeResult\n                            useDownload={false}\n                            title={props.t(\"evaluationDataSet\")}\n                            data={TestCaseStateList}\n                            scoreMod={props.sumScore === undefined ? \"disable\" : props.scoreMod}\n                            sumScore={props.sumScore}\n                        />\n                        {PublicTestCaseStateList.length !== 0 && (\n                            <JudgeResult\n                                useDownload={true}\n                                title={props.t(\"publicDataSet\")}\n                                data={PublicTestCaseStateList}\n                                scoreMod={props.sumScore === undefined ? \"disable\" : props.scoreMod}\n                                sumScore={props.sumScore}\n                            />\n                        )}\n                    </>\n                )}\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const SubState: SubmissionState = state.SubmissionReducer\n\n    return {\n        roles: UState.userInfo?.roles,\n        RejudgeAPI: SubState.TopSubmissionInfo?.RejudgeAPI,\n        InvalidateAPI: SubState.TopSubmissionInfo?.InvalidateAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(Summary))\n","import {Dispatch, useEffect, useState} from \"react\";\nimport {Skeleton, Steps} from 'antd';\nimport {withTranslation} from \"react-i18next\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {TestCaseProp} from \"../TestCase\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {\n    langMap,\n    RunningResultType,\n    RunningStateType,\n    StateList,\n    submissionInfoType,\n    SubmissionMap,\n    SubmissionState,\n    TestCaseStates\n} from \"../../../Type/ISubmission\";\nimport CodeHighlight from \"../../common/CodeHighlight\";\nimport {SyncJudging} from \"../SyncJudging\";\nimport {ck, isValueEmpty} from \"../../../Utils/empty\";\nimport Running from \"./Running\";\nimport Summary from \"./Summary\";\nimport cApi from \"../../../Utils/API/c-api\";\n\ninterface IProcessingProp {\n    TimeLimit: number\n    MemoryLimit: number,\n}\n\nconst Processing = (props: IProcessingProp & any) => {\n\n    // 当前评测的最新到达的步骤\n    const [currentStep, setCurrentStep] = useState<number>(0)\n    // 当前显示的步骤\n    const [showStep, setShowStep] = useState<number>(0)\n\n    // 评测有 评测进度 与 评测结果 两种\n    // 评测进度\n    const [RunningState, setRunningState] = useState<RunningStateType>(\"-4\")\n    // 评测结果\n    const [RunningResult, setRunningResult] = useState<RunningResultType>(\"0\")\n\n    // 测试点当前评测状态\n    const [TestCaseStateList, setTestCaseStateList] = useState<TestCaseProp[]>([])\n    const [PublicTestCaseStateList, setPublicTestCaseStateList] = useState<TestCaseProp[]>([])\n\n    // 测试结果信息\n    const [submissionInfo, setSubmissionInfo] = useState<submissionInfoType | undefined>()\n\n    // 为了动态显示评测点信息，使用 ws 与后端进行链接\n    // ws 是否打开\n    const [webSocketOpen, setWebSocketOpen] = useState<boolean>(false)\n    // ws 发送的信息（在打开时，当前数据的变更将同步发送至 ws）\n    const [webSocketQueryList, setWebSocketQueryList] = useState<string[]>([])\n\n    const preDealCheckpointSet = (resData: any, key: string) => {\n        if (resData[key] === null) resData[key] = []\n        else {\n            resData[key] = resData[key].map((value: any) => {\n                return {\n                    RunningResult: value[1].toString(),\n                    Score: value[2],\n                    Time: value[3],\n                    Memory: value[4],\n                    Index: value[0]\n                }\n            })\n        }\n    }\n    const initCaseData = (data: TestCaseProp[], num: number) => {\n        for (let i = 1; i <= num; i++) {\n            data.push({\n                caseIndex: i,\n                caseType: TestCaseStates.Pending,\n            })\n        }\n    }\n\n    const setCaseValue = (resData: any, key: string, data: TestCaseProp[]) => {\n        for (let i = 0; i < resData[key].length; i++) {\n            data.push({\n                caseIndex: i + 1,\n                caseType: StateList.indexOf(SubmissionMap[resData[key][i].RunningResult.toString()]),\n                caseScore: resData[key][i].Score,\n                caseTime: resData[key][i].Time,\n                caseMemory: resData[key][i].Memory,\n                caseID: resData[key][i].Index\n            })\n        }\n    }\n\n    const getSubmissionInfo = () => {\n        props.QuerySubmissionAPI(props.submissionId).then((resData: any) => {\n            // 格式化当前测试点信息\n            preDealCheckpointSet(resData, \"checkpointResults\")\n            preDealCheckpointSet(resData, \"publicCheckpointResults\")\n\n            // 根据当前的结果，初始化测试点信息，且调整当前布局\n            // 分 3 类分别处理： 1. 未评测完   2. 已评测完，但结果是编译错误或系统错误   3. 已评测完\n            let TestCaseInit: TestCaseProp[] = []\n            let PublicTestCaseInit: TestCaseProp[] = []\n            if (resData.judgeResult === 8 || resData.judgeResult === 5) {\n                // 当前状态为 系统错误 或 编译错误\n                setSubmissionInfo(resData)\n                setCurrentStep(1)\n                setShowStep(1)\n                setRunningState(\"-1\")\n                setRunningResult(resData.judgeResult.toString())\n            } else if (resData.judgeResult <= 0) { // resData.checkpointResults.length === 0\n                // 当前还在等待状态\n                initCaseData(TestCaseInit, resData.checkpointNum)\n                initCaseData(PublicTestCaseInit, resData.publicCheckpointNum)\n\n                setSubmissionInfo(resData)\n\n                setTestCaseStateList(TestCaseInit)\n                setPublicTestCaseStateList(PublicTestCaseInit)\n\n                setCurrentStep(1)\n                setShowStep(1)\n                setRunningState(resData.judgeResult === 0 ? \"-4\" : resData.judgeResult.toString())\n                setWebSocketOpen(true)\n                setWebSocketQueryList([resData.submissionId])\n            } else {\n                // 当前状态为已完成评测\n                setCaseValue(resData, \"checkpointResults\", TestCaseInit)\n                setCaseValue(resData, \"publicCheckpointResults\", PublicTestCaseInit)\n\n                // 评测已经结束后，当编译信息为空时，显示编译成功\n                if (isValueEmpty(resData.judgeLog)) resData.judgeLog = props.t(\"CompileSuccess\")\n                setSubmissionInfo(resData)\n                setTestCaseStateList(TestCaseInit)\n                setPublicTestCaseStateList(PublicTestCaseInit)\n\n                setCurrentStep(2)\n                setShowStep(2)\n                setRunningState(\"-1\")\n                setRunningResult(resData.judgeResult.toString())\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (props.submissionId !== undefined)\n            getSubmissionInfo()\n    }, [props.submissionId])\n\n\n    const addCaseInfo = (data: any[]) => {\n        const submissionIdHex = data[0]\n        const submissionVersion = data[1]\n        const checkpointType = data[2]\n        const checkpointIndex = data[3]\n        const checkpointId = data[4]\n        const judgeResult = data[5]\n        const judgeScore = data[6]\n        const usedTime = data[7]\n        const usedMemory = data[8]\n\n        // 若测试点信息，不是当前界面的，直接忽略\n        if (submissionIdHex !== props.submissionId) return\n\n        if (checkpointIndex < 0) {  // 小于 0，同步测试点状态\n            setRunningState(checkpointIndex.toString())\n            // -1 表示评测结束\n            if (checkpointIndex === -1) {\n                getSubmissionInfo()\n                setWebSocketOpen(false)\n            }\n        } else { // 否则表示同步测试点信息\n            if (checkpointType === 0) {\n                TestCaseStateList[checkpointIndex] = {\n                    caseIndex: checkpointIndex + 1,\n                    caseType: StateList.indexOf(SubmissionMap[judgeResult.toString()]),\n                    caseScore: judgeScore,\n                    caseTime: usedTime,\n                    caseMemory: usedMemory\n                }\n                setTestCaseStateList([...TestCaseStateList])\n            } else if (checkpointType === 1) {\n                PublicTestCaseStateList[checkpointIndex] = {\n                    caseIndex: checkpointIndex + 1,\n                    caseType: StateList.indexOf(SubmissionMap[judgeResult.toString()]),\n                    caseScore: judgeScore,\n                    caseTime: usedTime,\n                    caseMemory: usedMemory\n                }\n                setPublicTestCaseStateList([...PublicTestCaseStateList])\n            }\n\n        }\n    }\n\n\n    const {Step} = Steps;\n    const nameList = ['code', \"running\", \"summary\"]\n\n    const getStatus = (name: string) => {\n        const res = parseInt(RunningResult)\n        // \"5\": \"System Error\", \"8\": \"Compilation Error\", \"99\": \"Canceled\"\n        if (name === \"running\" && (res === 99)) return \"wait\"\n        if (name === \"running\" && (res === 5 || res === 8))\n            return \"error\"\n        const NameIndex = nameList.indexOf(name)\n        if (currentStep === NameIndex) return \"process\";\n        if (currentStep < NameIndex) return \"wait\";\n        if (currentStep > NameIndex) return \"finish\";\n    }\n    const getDisabled = (name: string) => {\n        return currentStep < nameList.indexOf(name);\n    }\n    const getIcon = (name: string) => {\n        if (name === \"running\" && RunningResult === \"99\") return undefined\n        // 若现在为正在运行的状态\n        return (RunningState !== \"-1\" && currentStep === nameList.indexOf(name)) ?\n            <LoadingOutlined/> : undefined\n    }\n\n    const sf = submissionInfo\n\n    let steps: { [key: string]: any } = {\n        code: {\n            title: props.t(\"Code\"),\n            icon: getIcon(\"code\"),\n            status: getStatus(\"code\"),\n            disabled: getDisabled(\"code\"),\n            cssClass: \"steps-content-pending\",\n            content: (\n                <>\n                    {!isValueEmpty(sf?.code) && sf?.judgeTemplateTitle !== undefined && (\n                        <CodeHighlight code={sf?.code} lang={langMap[sf.judgeTemplateTitle]}/>\n                    )}\n                    {isValueEmpty(sf?.zipFileId) && isValueEmpty(sf?.code) && (\n                        props.t(\"codeIsNotPublic\")\n                    )}\n                    {!isValueEmpty(sf?.zipFileId) && (\n                        <a href={cApi.getFileDownloadUrl(sf?.zipFileId as string, Date.now().toString() + \".zip\")}>{props.t(\"clickToDownload\")}</a>\n                    )}\n                </>\n            )\n        },\n        running: {\n            title: props.t(\"run\"),\n            icon: getIcon(\"running\"),\n            status: getStatus(\"running\"),\n            disabled: getDisabled(\"running\") || RunningResult === \"99\",\n            cssClass: \"steps-content-compile\",\n            content: (\n                <Running\n                    TestCaseStateList={TestCaseStateList}\n                    PublicTestCaseStateList={PublicTestCaseStateList}\n                    scoreMod={props.scoreMod}\n                    testcaseMod={props.testcaseMod}\n                    sumScore={props.sumScore}\n                    RunningState={RunningState}\n                    RunningResult={RunningResult}\n                    submissionInfo={submissionInfo}\n                    refresh={getSubmissionInfo}\n                />\n            )\n        },\n        summary: {\n            title: props.t(\"Summary\"),\n            icon: getIcon(\"summary\"),\n            status: getStatus(\"summary\"),\n            disabled: getDisabled(\"summary\"),\n            cssClass: \"steps-content-summary\",\n            content: (\n                <Summary\n                    TestCaseStateList={TestCaseStateList}\n                    PublicTestCaseStateList={PublicTestCaseStateList}\n                    scoreMod={props.scoreMod}\n                    testcaseMod={props.testcaseMod}\n                    sumScore={props.sumScore}\n                    TimeLimit={ck(props.TimeLimit, sf?.timeLimit)}\n                    MemoryLimit={ck(props.MemoryLimit, sf?.memoryLimit)}\n                    submissionInfo={submissionInfo}\n                    refresh={getSubmissionInfo}\n                />\n            )\n        }\n    }\n\n    return (\n        <>\n            <div className={\"Processing-SyncJudging\"}>\n                <SyncJudging\n                    open={webSocketOpen}\n                    dataHandle={addCaseInfo}\n                    queryList={webSocketQueryList}/>\n            </div>\n\n            <Skeleton active loading={props.submissionId === undefined || sf === undefined}>\n                <Steps type=\"navigation\" current={showStep} onChange={setShowStep}>\n                    {\n                        nameList.map((name) => {\n                            return <Step\n                                title={steps[name].title}\n                                icon={steps[name].icon}\n                                status={steps[name].status}\n                                disabled={steps[name].disabled}\n                            />\n                        })\n                    }\n                </Steps>\n                <div className={`steps-content ${steps[nameList[showStep]].cssClass}`}>\n                    {steps[nameList[showStep]].content}\n                </div>\n            </Skeleton>\n        </>\n    )\n\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const SubState: SubmissionState = state.SubmissionReducer\n    return {\n        submissionId: SubState.TopSubmissionId,\n        TimeLimit: SubState.TopSubmissionInfo?.TimeLimit,\n        MemoryLimit: SubState.TopSubmissionInfo?.MemoryLimit,\n\n        scoreMod: SubState.TopSubmissionInfo?.scoreMod,\n        sumScore: SubState.TopSubmissionInfo?.sumScore,\n\n        testcaseMod: SubState.TopSubmissionInfo?.testcaseMod,\n\n        QuerySubmissionAPI: SubState.TopSubmissionInfo?.QuerySubmissionAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTranslation()(\n        withRouter(Processing)\n    ))\n","import React, {Dispatch} from \"react\";\nimport {Button, Modal} from \"antd\";\nimport Processing from \"./Processing\";\nimport {SubmissionState} from \"../../../Type/ISubmission\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst ModalProcessing = (props: any) => {\n    const {t} = useTranslation()\n    return (\n        <Modal\n            title={\n                t(\"submissionDetails\") +\n                (props.title !== undefined ? \"(\" + props.title + \")\" : \"\")\n            }\n            destroyOnClose={true}\n            visible={props.submissionModalVis}\n            onCancel={() => props.setSubmissionModalVis(false)}\n            width={1200}\n            zIndex={2000}\n            style={{overflow: \"hidden\"}}\n            footer={[\n                <Button key=\"back\" onClick={() => {\n                    props.setSubmissionModalVis(false)\n                }}>\n                    关闭\n                </Button>\n            ]}\n        >\n            <Processing/>\n        </Modal>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const SubState: SubmissionState = state.SubmissionReducer\n    return {\n        submissionModalVis: SubState.SubmissionModalVis,\n        title: SubState.TopSubmissionInfo?.title\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setSubmissionModalVis: (data: boolean) => dispatch({\n        type: \"setSubmissionModalVis\", data: data\n    })\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ModalProcessing))\n","import SubmitButton from \"./SubmitButton\";\nimport CApi from \"../../Utils/API/c-api\";\nimport {Form, Modal} from \"antd\";\nimport ItemPassword from \"../user/Form/Item/ItemPassword\";\nimport React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\n\nconst RequirePassChange = (props: any) => {\n    const [form] = Form.useForm()\n    const requirePasswordChange = useSelector((state: any) => state.UserReducer.userInfo?.features?.requirePasswordChange)\n    const [passChange, setPassChange] = useState(false)\n\n    useEffect(() => {\n        if (requirePasswordChange === 1)\n            setPassChange(true)\n    }, [requirePasswordChange])\n\n\n    return (\n        <Modal\n            title={props.t(\"更改密码\")}\n            visible={passChange}\n            // closable={false}\n            maskClosable={false}\n            onCancel={() => {\n                setPassChange(false)\n            }}\n            footer={\n                <SubmitButton\n                    API={async () => {\n                        return form.validateFields().then((data: any) => {\n                            return CApi.updatePassword(data).then((res) => {\n                                form.resetFields()\n                                setPassChange(false)\n                                return Promise.resolve(props.t(\"success\"))\n                            })\n                        }).catch((e: any) => {\n                            return Promise.reject(e)\n                        })\n                    }}\n                    btnProps={{type: \"default\"}}\n                    btnText={props.t(\"update\")}\n                />\n            }\n        >\n            <p>{props.t(\"您当前的密码较弱，为了保护您的账号安全，请立即更改密码。\")}</p>\n            <Form\n                form={form}\n                layout={\"vertical\"}\n            >\n                <ItemPassword oldpass={true}/>\n                <ItemPassword newpass={true}/>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default withTranslation()(RequirePassChange)\n\n","import React, {Dispatch, Suspense} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport './Config/i18n'\nimport {ConfigProvider} from \"antd\";\nimport \"vditor/src/assets/less/index.less\";\nimport {connect} from \"react-redux\";\nimport {ConfigState} from \"./Type/IConfig\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Loading from \"./Utils/Loading\";\nimport {routerLayout} from \"./Config/router/router\";\nimport SubmissionModal from \"./Component/submission/Processing/ModalProcessing\";\nimport RequirePassChange from \"./Component/common/RequirePassChange\";\nimport MGroup from \"./Pages/Manage/MGroup\";\nimport MUser from \"./Pages/Manage/MUser\";\nimport MExam from \"./Pages/Manage/MExam\";\nimport MProblem from \"./Pages/Manage/Problem/MProblem\";\n\n\nconst App = (props: any) => {\n\n\n    return (\n        // antd 全局化配置  国际化参数\n        <ConfigProvider locale={props.local}>\n            {/*顶级路由*/}\n            <Router>\n                {/*提交详情窗体*/}\n                <SubmissionModal/>\n                {/*密码修改提示*/}\n                <RequirePassChange/>\n                <Suspense fallback={<Loading/>}>\n                    {\n                        routerLayout.map((r) => {\n                            return (\n                                <Route key={r.id} path={r.path} exact={r.exact}\n                                       component={r.component}/>\n                            )\n                        })\n                    }\n                </Suspense>\n            </Router>\n        </ConfigProvider>\n    );\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: ConfigState = state.ConfigReducer\n    return {\n        local: State.lang,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import {TableAction} from \"../Action/table\";\nimport {TableState} from \"../../Type/ITable\";\n\n// interface MTableState {\n//     Data: []\n//     SelectedRow: []\n// }\n\nconst initState: TableState = {\n    tableData: {}\n}\n\nexport const TableReduce = (state: TableState = initState, action: TableAction) => {\n    let State = {...state}\n    State.tableData = {...State.tableData}\n    const initTableData = (name: string) => {\n        if (State.tableData[name] === undefined)\n            State.tableData[name] = {\n                selectedRowKeys: [],\n                dataSource: [],\n                tableVersion: 0,\n                tableInfo: {}\n            }\n    }\n\n    switch (action.type) {\n        case \"setSelectedRowKeys\":\n            initTableData(action.name)\n            State.tableData[action.name].selectedRowKeys = action.data\n            break\n\n        case \"addTableVersion\":\n            initTableData(action.name)\n            const nv = State.tableData[action.name].tableVersion\n            State.tableData[action.name].tableVersion = Math.abs(nv) + 1\n            break\n\n        case \"setDataSource\":\n            initTableData(action.name)\n            State.tableData[action.name].dataSource = action.data\n            if(action.add) {\n                const nv = State.tableData[action.name].tableVersion\n                State.tableData[action.name].tableVersion = -(Math.abs(nv) + 1)\n            }\n            break\n\n        case \"setTableInfo\":\n            initTableData(action.name)\n            State.tableData[action.name].tableInfo = action.data\n            break\n        case \"clearRedux\":\n            return {\n                tableData: {}\n            };\n\n        default:\n\n    }\n    return State\n}\n","import {ExamAction} from \"../Action/exam\";\nimport {ExamState} from \"../../Type/IExam\";\n\n\nconst initState: ExamState = {\n    examInfo: {},\n    examProListInfo: {},\n    examAnswerSheetInfo: {}\n}\n\n\nexport const ExamReducer = (state: ExamState = initState, action: ExamAction) => {\n    let State: ExamState = {...state}\n    switch (action.type) {\n        case \"setAnswerSheet\":\n            State.examAnswerSheetInfo[action.key] = action.data\n            break\n        case \"setProLists\":\n            State.examProListInfo = {\n                ...State.examProListInfo,\n                ...action.data\n            }\n            break\n        case \"setExamInfo\":\n            State.examInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                examInfo: {},\n                examProListInfo: {},\n                examAnswerSheetInfo: {}\n            };\n        default:\n            break\n    }\n    return State\n}","import deepClone from \"Utils/deepClone\";\nimport {ConfigState} from \"../../Type/IConfig\";\nimport {ConfigAction} from \"../Action/config\";\nimport {languageMap} from \"../../Config/i18n\";\nimport {initLanguage} from \"../../Utils/initLanguage\";\n\nconst initState: ConfigState = {\n    lang: languageMap[initLanguage()],\n    langCode: \"\",\n    mode: \"exam\",\n    timestamp: Date.now(),\n    copyRight: \"\"\n}\n\n\nexport const ConfigReducer = (state: ConfigState = initState, action: ConfigAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State = deepClone(state)\n\n    switch (action.type) {\n        case \"updateLanguage\":\n            State.lang = action.lang\n            State.langCode = action.langCode\n            break\n        case \"updateTimestamp\":\n            State.timestamp = action.timestamp\n            break\n\n        case \"setCopyRight\":\n            State.copyRight = action.data\n            break\n\n        case \"clearRedux\":\n            return initState;\n\n        default:\n            break\n    }\n\n    return State\n}\n","import {ProblemState} from \"../../Type/IProblem\";\nimport {ProblemAction} from \"../Action/problem\";\n\nconst initState: ProblemState = {\n    ProblemInfo: {}\n}\n\nexport const ProblemReducer = (state: ProblemState = initState, action: ProblemAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State = {...state}\n    switch (action.type) {\n        case \"setProblemInfo\":\n            State.ProblemInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                ProblemInfo: {}\n            };\n    }\n    return State\n}","import deepClone from \"Utils/deepClone\";\nimport {UserState} from \"../../Type/Iuser\";\nimport {UserAction} from \"../Action/user\";\n\nconst initState: UserState = {\n    isLogin: false\n}\n\nexport const UserReducer = (state: UserState = initState, action: UserAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: UserState = deepClone(state)\n    switch (action.type) {\n        case \"setUserInfo\":\n            State.userInfo = action.data\n            break\n        case \"userLogin\":\n            State.isLogin = true\n            break\n        case \"userLogout\":\n            State.isLogin = false\n            State.userInfo = undefined\n            // message.info(\"已退出登录\")\n            break\n\n        default:\n            break\n    }\n    return State\n}\n","import deepClone from \"Utils/deepClone\";\nimport {ManageState} from \"../../Type/IManage\";\nimport {ManageAction} from \"../Action/manage\";\n\n\nconst initState: ManageState = {\n    manageInitData: {}\n}\n\n\nexport const ManageReducer = (state: ManageState = initState, action: ManageAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: ManageState = deepClone(state)\n    switch (action.type) {\n        case \"addManageInitData\":\n            State.manageInitData[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                manageInitData: {}\n            };\n    }\n    return State\n}","import {SubmissionState} from \"../../Type/ISubmission\";\nimport {SubmissionAction} from \"../Action/submission\";\n\nconst initState: SubmissionState = {\n    SubmissionModalVis: false,\n    submissionListInfo: {}\n}\n\nexport const SubmissionReducer = (state: SubmissionState = initState, action: SubmissionAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: SubmissionState = {...state}\n    switch (action.type){\n        case \"setTopSubmission\":\n            State.TopSubmissionId = action.submissionID\n            State.TopSubmissionInfo = action.submissionInfo\n            break\n        case \"setSubmissionModalVis\":\n            State.SubmissionModalVis = action.data\n            break\n        case \"setSubmissionListInfo\":\n            State.submissionListInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return initState;\n    }\n    return State\n}","import {ContestAction, ContestState} from \"../Action/contest\";\n\nconst initState: ContestState = {\n    contestInfo: {},\n    minWidth: 0,\n    afterContestSubmission: false,\n    sliderTime: 0,\n    allowSliderMove: false,\n    openSliderMove: false,\n    exportData: []\n}\n\nexport const ContestReducer = (state: ContestState = initState, action: ContestAction) => {\n    let State = {...state}\n    switch (action.type){\n        case \"setContestInfo\":\n            State.contestInfo[action.key] = action.data\n            break\n\n        case \"setExportData\":\n            State.exportData = action.data\n            break\n\n        case \"setMinWidth\":\n            State.minWidth = action.data\n            break\n        case \"setAfterContestSubmission\":\n            State.afterContestSubmission = action.data\n            break\n        case \"setAllowSliderMove\":\n            State.allowSliderMove = action.data\n            break\n        case \"setSliderTime\":\n            State.sliderTime = action.data\n            break\n        case \"setOpenSliderMove\":\n            State.openSliderMove = action.data\n            break\n        case \"clearRedux\":\n            return {\n                contestInfo: {},\n                minWidth: 0,\n                afterContestSubmission: false,\n                sliderTime: 0,\n                allowSliderMove: false,\n                openSliderMove: false\n            };\n    }\n    return State\n}","import {ProblemSetAction, ProblemSetState} from \"../Action/problemSet\";\n\nconst initState: ProblemSetState = {\n    problemSetInfo: {},\n}\n\nexport const ProblemSetReducer = (state: ProblemSetState = initState, action: ProblemSetAction) => {\n    let State = {...state}\n    switch (action.type) {\n        case \"setProblemSetInfo\":\n            State.problemSetInfo[action.key] = action.data\n            break\n\n        case \"clearRedux\":\n            return initState;\n    }\n    return State\n}","import deepClone from \"../../Utils/deepClone\";\nimport {CommonAction, CommonState} from \"../Action/common\";\n\nconst initState: CommonState = {\n    keyValueData: {}\n}\n\nexport const CommonReducer = (state: CommonState = initState, action: CommonAction) => {\n    let State: CommonState = deepClone(state)\n\n    switch (action.type) {\n        case \"setKeyValue\":\n            State.keyValueData[action.key] = action.value\n            break\n\n        case \"clearRedux\":\n            return initState;\n\n        default:\n            break\n    }\n\n    return State\n}","import {combineReducers} from \"redux\";\n\nimport {TableReduce} from \"../Reducer/table\";\nimport {ExamReducer} from \"../Reducer/exam\";\nimport {ConfigReducer} from \"../Reducer/config\";\nimport {ProblemReducer} from \"../Reducer/problem\";\nimport {UserReducer} from \"../Reducer/user\";\nimport {ManageReducer} from \"../Reducer/manage\";\nimport {SubmissionReducer} from \"../Reducer/submission\";\nimport {ContestReducer} from \"../Reducer/contest\";\nimport {ProblemSetReducer} from \"../Reducer/problemSet\";\nimport {CommonReducer} from \"../Reducer/common\";\n\n// 全局创建多个 reducer 在这里合并统一调度\nexport const rootReducers =\n    combineReducers({\n        TableReduce,            // 通用表格部分\n        ExamReducer,            // 考试模块\n        ConfigReducer,          // 全局配置\n        ProblemReducer,         // 题目模块\n        UserReducer,            // 用户模块\n        ManageReducer,          // 管理端\n        SubmissionReducer,\n        ContestReducer,\n        ProblemSetReducer,\n        CommonReducer\n    })","import {applyMiddleware, createStore} from \"redux\";\nimport {rootReducers} from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n// 全局就管理一个store\nexport const store = createStore(rootReducers,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport {store} from \"./Redux/Store\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n     <Provider store={store}>\n        <App/>\n     </Provider>,\n   // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}